{"version":3,"sources":["../../../../game/objects/ResourceNode/ResourceNode.js"],"names":["THREE","require","Model","GameSettings","ResourceNode","game","model","size","Vector3","resourceNode","defaultSize","x","y","z","resourceRemaining","type","resourceType","collectionSpeed","speed","selected","matrixAutoUpdate","updateMatrix","topMesh","children","material","materials","baseMesh","setBaseColor","baseColor","setTopColor","topColor","color","Color","objArray","coords","i","queueJob","job","module","exports"],"mappings":";;;;;;;;;;;;AAAA;;;;;;;AAOA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,QAAQD,QAAQ,aAAR,CAAd;AACA,IAAME,eAAeF,QAAQ,uBAAR,CAArB;;AAEA;;;;;;;IAOMG,Y;;;AACJ,wBACEC,IADF,EAEEC,KAFF,EASE;AAAA,QANAC,IAMA,uEANO,IAAIP,MAAMQ,OAAV,CACLL,aAAaM,YAAb,CAA0BC,WAA1B,CAAsCC,CADjC,EAELR,aAAaM,YAAb,CAA0BC,WAA1B,CAAsCE,CAFjC,EAGLT,aAAaM,YAAb,CAA0BC,WAA1B,CAAsCG,CAHjC,CAMP;AAAA,QADAC,iBACA,uEADoB,CACpB;;AAAA;;AAAA,4HACMT,IADN,EACYC,KADZ,EACmBC,IADnB;;AAGA,UAAKD,KAAL,GAAaA,KAAb;AACA,UAAKS,IAAL,GAAY,cAAZ;AACA,UAAKC,YAAL,GAAoB,IAApB;AACA,UAAKC,eAAL,GAAuB,CAAvB;AACA,UAAKH,iBAAL,GAAyBA,iBAAzB;AACA,UAAKI,KAAL,GAAa,CAAb;AACA,UAAKC,QAAL,GAAgB,KAAhB;AACA,UAAKC,gBAAL,GAAwB,KAAxB;AAVA;AAWD;;;;6BAEQ;AACP,WAAKC,YAAL;AACD;;;kCAEa;AACZ,WAAKC,OAAL,GAAe,KAAKC,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0B,CAA1B,EAA6BA,QAA7B,CAAsC,CAAtC,EAAyCC,QAAzC,CAAkDC,SAAlD,CAA4D,CAA5D,CAAf;AACA,WAAKC,QAAL,GAAgB,KAAKH,QAAL,CAAc,CAAd,EAAiBA,QAAjB,CAA0B,CAA1B,EAA6BA,QAA7B,CAAsC,CAAtC,EAAyCC,QAAzC,CAAkDC,SAAlD,CAA4D,CAA5D,CAAhB;;AAGA,WAAKE,YAAL,CAAkB,KAAKC,SAAvB;AACA,WAAKC,WAAL,CAAiB,KAAKC,QAAtB;;AAEA;AACA,WAAKT,YAAL;AACD;;;iCAEYU,K,EAAO;AAClB,UAAG,KAAKL,QAAL,CAAcK,KAAd,KAAwBA,KAA3B,EAAkC;AAChC,aAAKL,QAAL,CAAcK,KAAd,GAAsB,IAAI/B,MAAMgC,KAAV,CAAgBD,KAAhB,CAAtB;AACD;AACF;;;gCAEWA,K,EAAO;AACjB,UAAG,KAAKT,OAAL,CAAaS,KAAb,KAAuBA,KAA1B,EAAiC;AAC/B,aAAKT,OAAL,CAAaS,KAAb,GAAqB,IAAI/B,MAAMgC,KAAV,CAAgBD,KAAhB,CAArB;AACD;AACF;;;2BAEME,Q,EAAUC,M,EAAQ;;AAEvB,WAAI,IAAIC,CAAR,IAAaF,QAAb,EAAuB;;AAErBA,iBAASE,CAAT,EAAYC,QAAZ,CAAqB;AACnBC,eAAK,iBADc;AAEnB5B,wBAAc;AAFK,SAArB;AAKD;AACD,aAAO,IAAP,CAVuB,CAUV;AACd;;;6BAEuB;AAAA,UAAjBU,QAAiB,uEAAN,IAAM;;AACtB,WAAKA,QAAL,GAAgBA,QAAhB;;AAEA,UAAGA,QAAH,EAAa;AACX,aAAKQ,YAAL,CAAkB,QAAlB;AACA,aAAKE,WAAL,CAAiB,QAAjB;AACD,OAHD,MAGO;AACL,aAAKF,YAAL,CAAkB,KAAKC,SAAvB;AACA,aAAKC,WAAL,CAAiB,KAAKC,QAAtB;AACD;AACF;;;;EA1EwB5B,K;;AA6E3BoC,OAAOC,OAAP,GAAiBnC,YAAjB","file":"ResourceNode.js","sourcesContent":["/*\njshint\nnode: true,\nesversion: 6,\nbrowser: true\n*/\n\nconst THREE = require('three');\nconst Model = require('../Model.js');\nconst GameSettings = require('../../GameSettings.js');\n\n/*\n  Resource nodes give resources to miners/gatherers/etc.\n  Most have a set resource limit (until which they expire).\n  Generally, collection can only be done on player's claimed territory.\n  As a general rule, resource collection speed should be faster from resource nodes than from production buildings.\n*/\n\nclass ResourceNode extends Model {\n  constructor(\n    game,\n    model,\n    size = new THREE.Vector3(\n      GameSettings.resourceNode.defaultSize.x,\n      GameSettings.resourceNode.defaultSize.y,\n      GameSettings.resourceNode.defaultSize.z\n    ),\n    resourceRemaining = 1\n  ) {\n    super(game, model, size);\n\n    this.model = model;\n    this.type = \"resourceNode\";\n    this.resourceType = null;\n    this.collectionSpeed = 1;\n    this.resourceRemaining = resourceRemaining;\n    this.speed = 0;\n    this.selected = false;\n    this.matrixAutoUpdate = false;\n  }\n\n  update() {\n    this.updateMatrix();\n  }\n\n  onModelLoad() {\n    this.topMesh = this.children[0].children[0].children[0].material.materials[0];\n    this.baseMesh = this.children[0].children[0].children[0].material.materials[1];\n\n\n    this.setBaseColor(this.baseColor);\n    this.setTopColor(this.topColor);\n\n    super.onModelLoad();\n    this.updateMatrix();\n  }\n\n  setBaseColor(color) {\n    if(this.baseMesh.color !== color) {\n      this.baseMesh.color = new THREE.Color(color);\n    }\n  }\n\n  setTopColor(color) {\n    if(this.topMesh.color !== color) {\n      this.topMesh.color = new THREE.Color(color);\n    }\n  }\n\n  assign(objArray, coords) {\n\n    for(let i in objArray) {\n\n      objArray[i].queueJob({\n        job: 'collectResource',\n        resourceNode: this\n      });\n\n    }\n    return true; // stop bubbling\n  }\n\n  select(selected = true) {\n    this.selected = selected;\n\n    if(selected) {\n      this.setBaseColor(0xFFFFFF);\n      this.setTopColor(0xFFFFFF);\n    } else {\n      this.setBaseColor(this.baseColor);\n      this.setTopColor(this.topColor);\n    }\n  }\n}\n\nmodule.exports = ResourceNode;\n"]}