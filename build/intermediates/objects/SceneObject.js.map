{"version":3,"sources":["../../../game/objects/SceneObject.js"],"names":["THREE","require","SceneObject","geometry","material","speed","velocity","Vector3","canAssign","castShadow","receiveShadow","boundingBox","destination","selectedColor","unselectedColor","destinationRange","moveTowardDestination","difX","x","position","difY","y","difZ","z","Math","sign","size","abs","d","sqrt","pow","name","sceneObject","Box3","setFromObject","getSize","max","min","obj","point","undefined","selected","color","setHex","objectsArray","coords","Mesh","module","exports"],"mappings":"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","file":"SceneObject.js","sourcesContent":["/*\njshint\nnode: true,\nesversion: 6,\nbrowser: true\n*/\n\nconst THREE = require('three');\n\nclass SceneObject extends THREE.Mesh {\n  constructor(geometry, material) {\n    super(geometry, material);\n\n    // movement options\n    this.speed = 0;\n    this.velocity = new THREE.Vector3(0, 0, 0);\n    this.canAssign = true;\n\n    this.castShadow = true;\n    this.receiveShadow = true;\n\n    this.boundingBox = null;\n    this.destination = null;\n\n    this.selectedColor = 0xFFFFFF;\n    this.unselectedColor = 0xCC0000;\n\n    this.destinationRange = new THREE.Vector3(25, 25, 25); // tolerance for how close an object must get before stopping\n  }\n\n  update() {\n    this.moveTowardDestination(this.destination);\n  }\n\n  moveTowardDestination(destination = null) {\n    if(destination !== null) {\n      let difX = destination.x - this.position.x;\n      let difY = destination.y - this.position.y;\n      let difZ = destination.z - this.position.z;\n\n      // correct destination\n      difX -= Math.sign(difX) * this.size.x/2;\n      difY -= Math.sign(difY) * this.size.y/2;\n      difZ -= Math.sign(difZ) * this.size.z/2;\n\n      // only move if farther than this.destinationRange\n      if(Math.abs(difX) > this.destinationRange.x || Math.abs(difY) > this.destinationRange.y || Math.abs(difZ) > this.destinationRange.z) {\n        let d = Math.sqrt(Math.pow(difX, 2) + Math.pow(difY, 2) + Math.pow(difZ, 2));\n\n        // move at constant speed no matter the direction\n        this.velocity.x = (this.speed * difX) / d;\n        this.velocity.y = (this.speed * difY) / d;\n        this.velocity.z = (this.speed * difZ) / d;\n\n        if(this.velocity.x !== 0 || this.velocity.y !== 0 || this.velocity.z !== 0) {\n          // update position\n          this.position.x += this.velocity.x;\n          this.position.y += this.velocity.y;\n          this.position.z += this.velocity.z;\n\n          // store local position\n          this.position.x = this.position.x;\n          this.position.y = this.position.y;\n          this.position.z = this.position.z;\n        }\n      }\n    }\n  }\n\n  setName(name) {\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  setSceneObject(sceneObject) {\n    this.sceneObject = sceneObject;\n    this.boundingBox = new THREE.Box3().setFromObject(this.sceneObject);\n    this.size = this.getSize();\n  }\n\n  getSize() {\n    this.boundingBox = new THREE.Box3().setFromObject(this.sceneObject);\n    return new THREE.Vector3(\n      this.boundingBox.max.x - this.boundingBox.min.x,\n      this.boundingBox.max.y - this.boundingBox.min.y,\n      this.boundingBox.max.z - this.boundingBox.min.z\n    );\n  }\n\n  getDistanceFrom(obj) {\n    let point = new THREE.Vector3();\n\n    if(\n      obj.x !== undefined &&\n      obj.y !== undefined &&\n      obj.z !== undefined\n    ) {\n      // obj is Vector3\n      point = obj;\n    } else {\n      // assume its a gameobj\n      point = obj.position;\n    }\n\n    // 3-dimensional pythagorean formula\n    return Math.sqrt(\n      Math.pow(this.position.x - point.x, 2) +\n      Math.pow(this.position.y - point.y, 2) +\n      Math.pow(this.position.z - point.z, 2)\n    );\n  }\n\n  select(selected) {\n    if(selected) {\n      this.material.color.setHex(this.selectedColor);\n    } else {\n      this.material.color.setHex(this.unselectedColor);\n    }\n  }\n\n  /*\n    @objArray an array of current selectedObjects\n    @coords the intersection of mouse raycast and this object\n    This is called whenever a player right-clicks on this object while selectedObjects.length > 0\n  */\n  assign(objectsArray, coords) {\n    // if bubbling should continue, return falsey\n    // otherwise, the click stops bubbling down\n    return null;\n  }\n}\n\nmodule.exports = SceneObject;\n"]}