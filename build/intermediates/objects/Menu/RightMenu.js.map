{"version":3,"sources":["../../../../game/objects/Menu/RightMenu.js"],"names":["THREE","require","Menu","RightMenu","game","buttons","name","function","removeSelected","listSelectedUnits","listNearbyToSelectedUnits","assignElements","assignClickListeners","numSelectedUnits","typeMap","selectedUnitInterfaces","parent","window","document","getElementById","i","selectedUnits","unit","elem","createElement","innerHTML","getInterfaceHtml","setAttribute","push","type","length","existingElem","querySelector","queues","querySelectorAll","timeLeftElem","timeLeft","getTimeLeftOfQueue","queuedUnitsElement","getQueueHTML","appendChild","oldMenu","len","exists","getAttribute","remove","selectedTypes","element","addEventListener","event","path","id","apply","args","module","exports"],"mappings":"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","file":"RightMenu.js","sourcesContent":["/*\njshint\nnode: true,\nesversion: 6,\nbrowser: true\n*/\n\nconst THREE = require('three');\nconst Menu = require('./Menu.js');\n\nclass RightMenu extends Menu {\n  constructor(game) {\n    super(game, 'rightMenu');\n\n    this.buttons = [{\n      name: 'deleteSelected',\n      function: this.game.removeSelected\n    }, {\n      name: 'listSelected',\n      function: this.game.listSelectedUnits\n    }, {\n      name: 'listNearbyUnits',\n      function: this.game.listNearbyToSelectedUnits\n    }];\n\n    this.assignElements();\n    this.assignClickListeners();\n  }\n\n  render() {\n    // update # of selected units\n    let numSelectedUnits = 0;\n    let typeMap = {};\n    let selectedUnitInterfaces = [];\n    let parent = window.document.getElementById('selectedUnitInterfaces');\n\n    for(let i in this.game.selectedUnits) {\n      let unit = this.game.selectedUnits[i];\n\n      numSelectedUnits++;\n\n      // build selected unit interfaces\n      let elem = document.createElement('div');\n\n      elem.innerHTML = unit.getInterfaceHtml();\n      elem.setAttribute('data-unitName', unit.name);\n      selectedUnitInterfaces.push(elem);\n\n      let type = unit.type;\n\n      // save number of each type for later rendering\n      if(typeMap[type]) {\n        typeMap[type]++;\n      } else {\n        typeMap[type] = 1;\n      }\n\n      // attach interface or update existing interface\n      for(let i = 0; i < selectedUnitInterfaces.length; i++) {\n        // update existing if exists\n        let existingElem = parent.querySelector(`[data-unitName=\"${unit.name}\"]`);\n\n        if(existingElem) {\n\n          // update any queues on that elem\n          let queues = existingElem.querySelectorAll('.queuedUnits');\n\n          for(let i = 0; i < queues.length; i++) {\n            let timeLeftElem = queues[i].querySelector('.timeLeft');\n            let timeLeft = unit.getTimeLeftOfQueue(i);\n            if(timeLeftElem && timeLeft) {\n              timeLeftElem.innerHTML = unit.getTimeLeftOfQueue(i);\n            }\n          }\n\n          let queuedUnitsElement = existingElem.querySelector('.queuedUnits');\n\n          if(queuedUnitsElement) {\n            queuedUnitsElement.innerHTML = unit.getQueueHTML();\n          }\n\n        } else {\n\n          parent.appendChild(elem);\n\n        }\n      }\n    }\n\n    // remove interfaces of no longer selected units\n    let oldMenu = parent.querySelectorAll('*');\n    for(let i =0; i < oldMenu.length; i++) {\n      // check if it existing in selectedUnits\n      let len = this.game.selectedUnits.length;\n      let exists = false;\n      for(let i=0; i < len; i++) {\n        if(oldMenu[i].getAttribute('data-unitName') == this.game.selectedUnits[i].name) {\n          exists = true;\n        }\n      }\n      // if not, remove from DOM\n      if(!exists) {\n        oldMenu[i].remove();\n      }\n    }\n\n    window.document.getElementById(`numSelectedNum`).innerHTML = numSelectedUnits;\n\n    // build type elements\n    let selectedTypes = window.document.getElementById('selectedTypes');\n        selectedTypes.innerHTML = '';\n    for(let i in typeMap) {\n      let elem = window.document.createElement('p');\n      elem.innerHTML = `${typeMap[i]} ${i}`;\n      selectedTypes.appendChild(elem);\n    }\n  }\n\n  assignElements() {\n    for (let i in this.buttons) {\n      this.buttons[i].element = window.document.getElementById(`rightMenu-${this.buttons[i].name}`);\n    }\n  }\n\n  assignClickListeners() {\n    this.element.addEventListener('click', (event) => {\n      // if the id matches one in this.buttons, call that button's function with its args\n      for (let i in this.buttons) {\n        if (event.path[0].id === `rightMenu-${this.buttons[i].name}`) {\n          this.buttons[i].function.apply(this.game, this.buttons[i].args);\n        }\n      }\n      // don't let click event bubble to game\n    }, true);\n  }\n}\n\nmodule.exports = RightMenu;\n"]}