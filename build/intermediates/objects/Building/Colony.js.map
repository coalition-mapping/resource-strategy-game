{"version":3,"sources":["../../../../game/objects/Building/Colony.js"],"names":["THREE","require","Building","GameSettings","Colony","game","size","Vector3","colony","defaultSize","x","y","z","type","status","model","buildingType","buildCost","completeColor","incompleteColor","buildingHasNotBegunTexture","buildingInProgressTexture","buildingCompleteTexture","cubesColor","floorTexture","wallHeightProportion","meshes","children","floor","walls","ceilingOfEntrance","wallFloor","towerWall0","towerWall1","centerTowerWall","centerTowerCeiling","towerWall3","centerTowerCube","towerCube1","towerCube2","towerCubeCeiling","towerWall2","towerCube3","tower3Ceiling","towerCube0","setWallTexture","setCubesColor","setFloorTexture","selected","completion","setCenterCubeColor","buildingNotStartedColor","setWallHeight","height","boundingBox","Box3","setFromObject","myHeight","max","min","myZScale","scale","Math","color","centerCubeColor","Color","material","MeshLambertMaterial","needsUpdate","texture","wallTexture","tex","textureLoader","load","wrapS","wrapT","RepeatWrapping","repeat","set","map","objArray","coords","i","html","name","module","exports"],"mappings":"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","file":"Colony.js","sourcesContent":["/*\njshint\nnode: true,\nesversion: 6,\nbrowser: true\n*/\n\nconst THREE = require('three');\nconst Building = require('./Building.js');\nconst GameSettings = require('../../GameSettings.js');\n\nclass Colony extends Building {\n  constructor(\n    game,\n    size = new THREE.Vector3(\n      GameSettings.colony.defaultSize.x,\n      GameSettings.colony.defaultSize.y,\n      GameSettings.colony.defaultSize.z\n    ),\n    type = 'colony',\n    status = 'incomplete'\n  ) {\n    let model = GameSettings.colony.model;\n    super(game, model, size, status);\n\n    this.buildingType = GameSettings.colony.type;\n\n    this.buildCost = GameSettings.colony.buildCost;\n\n    this.completeColor = GameSettings.colony.completeColor;\n    this.incompleteColor = GameSettings.colony.incompleteColor;\n    this.buildingHasNotBegunTexture = GameSettings.colony.buildingHasNotBegunTexture;\n    this.buildingInProgressTexture = GameSettings.colony.buildingInProgressTexture;\n    this.buildingCompleteTexture = GameSettings.colony.buildingCompleteTexture;\n    this.cubesColor = GameSettings.colony.cubesColor;\n    this.floorTexture = GameSettings.colony.floorTexture;\n\n    this.wallHeightProportion = 0.4;\n  }\n\n  update() {\n    super.update();\n  }\n\n  onModelLoad() {\n    this.meshes = this.children[0].children;\n\n    this.floor = this.meshes[0];\n    this.walls = this.meshes[1];\n    this.ceilingOfEntrance = this.meshes[2];\n    this.wallFloor = this.meshes[3];\n    this.towerWall0 = this.meshes[4];\n    this.towerWall1 = this.meshes[5];\n    // unknown [6]\n    this.centerTowerWall = this.meshes[7];\n    this.centerTowerCeiling = this.meshes[8];\n    this.towerWall3 = this.meshes[9];\n    this.centerTowerCube = this.meshes[10];\n    this.towerCube1 = this.meshes[11];\n    this.towerCube2 = this.meshes[12];\n    this.towerCubeCeiling = this.meshes[13];\n    this.towerWall2 = this.meshes[14];\n    this.towerCube3 = this.meshes[15];\n    this.tower3Ceiling = this.meshes[16];\n    // unknown [17]\n    this.towerCube0 = this.meshes[18];\n\n    this.setWallTexture(this.buildingHasNotBegunTexture);\n    this.setCubesColor(this.incompleteColor);\n    this.setFloorTexture(this.floorTexture);\n\n    super.onModelLoad();\n  }\n\n  updateAppearanceByCompletion() {\n    if(!this.selected) {\n      if(this.completion >= 100) {\n        this.setCenterCubeColor(this.completeColor);\n        this.setCubesColor(this.completeColor);\n        this.setWallTexture(this.buildingCompleteTexture);\n      } else if (this.completion === 0) {\n        this.setCenterCubeColor(this.buildingNotStartedColor);\n        this.setCubesColor(this.buildingNotStartedColor);\n      } else {\n        this.setCenterCubeColor(this.incompleteColor);\n        this.setWallTexture(this.buildingInProgressTexture);\n        this.setCubesColor(this.incompleteColor);\n      }\n    } else {\n      this.setCenterCubeColor(0xFFFFFF);\n      this.setCubesColor(0xFFFFFF);\n    }\n\n    // raise cube according to completion\n    this.setWallHeight(this.completion * this.wallHeightProportion);\n  }\n\n  setWallHeight(height) {\n    let boundingBox = new THREE.Box3().setFromObject(this.walls);\n    let myHeight = boundingBox.max.z - boundingBox.min.z;\n    let myZScale = this.walls.scale.z;\n\n    this.walls.scale.z = Math.max((myZScale * height)/myHeight, 0.01);\n    this.ceilingOfEntrance.scale.z = this.walls.scale.z / 2;\n  }\n\n  setCenterCubeColor(color) {\n    if(this.centerCubeColor !== color) {\n\n      color = new THREE.Color(color);\n\n      this.centerTowerCube.children[0].material = new THREE.MeshLambertMaterial({\n        color: color\n      });\n      this.centerTowerCube.children[0].material.needsUpdate = true;\n      this.centerCubeColor = color;\n    }\n  }\n\n  setCubesColor(color) {\n    color = new THREE.Color(color);\n\n    let material = new THREE.MeshLambertMaterial({\n      color: color\n    });\n\n    this.towerCube0.children[0].material = material;\n    this.towerCube1.children[0].material = material;\n    this.towerCube2.children[0].material = material;\n    this.towerCube3.children[0].material = material;\n  }\n\n  setWallTexture(texture) {\n    if(this.wallTexture !== texture) {\n      let tex = this.textureLoader.load(texture);\n\n      tex.wrapS = tex.wrapT = THREE.RepeatWrapping;\n      tex.repeat.set(2, 2);\n\n      let material = new THREE.MeshLambertMaterial({\n        map: tex\n      });\n\n      this.walls.children[0].material = material;\n      this.wallFloor.children[0].material = material;\n      this.wallTexture = texture;\n    }\n  }\n\n  setFloorTexture(texture) {\n    if(this.floorTexture !== texture) {\n      let tex = this.textureLoader.load(texture);\n\n      tex.wrapS = tex.wrapT = THREE.RepeatWrapping;\n      tex.repeat.set(2, 2);\n\n      let material = new THREE.MeshLambertMaterial({\n        map: tex\n      });\n\n      this.meshes[6].children[0].material = material;\n      this.meshes[17].children[0].material = material;\n      this.floorTexture = texture;\n    }\n  }\n\n  /*\n    @objArray an array of current selectedUnits\n    @coords the intersection of mouse raycast and this object\n    This is called whenever a player right-clicks on this object while selectedObjects.length > 0\n  */\n  assign(objArray, coords) {\n\n    for(let i in objArray) {\n      // assign any new jobs to selectedUnits\n    }\n\n    super.assign(objArray, coords);\n\n    return true;\n  }\n\n  getInterfaceHtml() {\n    let html = `\n      <p>${this.name} : ${this.type}</p>\n      <ul class=\"actions\">\n        <p>Actions</p>\n        <li><a href=\"#\" onclick=\"window.game.removeBuilding('${this.name}');\">Destroy</a></li>\n        <li><a href=\"#\" onclick=\"window.game.queueUnit('cube', '${this.name}')\">Queue Unit: Cube</a></li>\n      </ul>\n      <ul class=\"research\">\n        <p>Tech Research</p>\n        <li><a href=\"#\" onclick=\"alert('game');\">Tech 1</a></li>\n        <li><a href=\"#\" onclick=\"alert('game');\">Tech 2</a></li>\n        <li><a href=\"#\" onclick=\"alert('game');\">Tech 3</a></li>\n        <li><a href=\"#\" onclick=\"alert('game');\">Tech 4</a></li>\n      </ul>\n      <ul class=\"queuedUnits\">\n      </ul>\n    `;\n\n    return html;\n  }\n}\n\nmodule.exports = Colony;\n"]}