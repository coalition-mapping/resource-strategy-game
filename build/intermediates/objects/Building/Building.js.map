{"version":3,"sources":["../../../../game/objects/Building/Building.js"],"names":["THREE","require","Model","Cube","GameSettings","Building","game","model","size","status","type","buildingType","destination","buildSpeed","buildQueue","buildingNotStartedColor","completeColor","incompleteColor","matrixAutoUpdate","completion","console","error","queuedUnits","unitSpawnLocation","position","newUnitJob","speed","isLoaded","buildCheck","processQueuedUnits","updateMatrix","i","timeLeft","unit","Vector3","coordinates","x","y","z","newCube","addCube","undefined","splice","queueJob","updateAppearanceByCompletion","buildAmt","objArray","coords","job","building","resourceNode","selected","toLowerCase","buildTime","units","getBuildTime","buildCost","canAfford","player","resources","push","html","name","module","exports"],"mappings":"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","file":"Building.js","sourcesContent":["/*\njshint\nnode: true,\nesversion: 6,\nbrowser: true,\n-W041: false\n*/\n\nconst THREE = require('three');\nconst Model = require('../Model.js');\nconst Cube = require('../Cube.js');\nconst GameSettings = require('../../GameSettings.js');\n\nclass Building extends Model {\n  constructor(\n    game,\n    model,\n    size,\n    status\n  ) {\n    super(game, model, size);\n\n    this.model = model;\n    this.type = \"building\";\n    this.buildingType = null;\n    this.status = status;\n    this.destination = null;\n    this.buildSpeed = 1;\n    this.buildQueue = 0;\n    this.buildingNotStartedColor = 0x666666;\n    this.completeColor = 0x333333;\n    this.incompleteColor = 0x999999;\n    this.matrixAutoUpdate = false;\n\n    // set this.completion based on status\n    switch(this.status) {\n      case 'incomplete':\n        this.completion = 0;\n        break;\n      case 'complete':\n        this.completion = 100;\n        break;\n      default:\n        console.error(`unrecognized status when constucting building`);\n        break;\n    }\n\n    this.queuedUnits = [];\n\n    this.unitSpawnLocation = this.position;\n    this.newUnitJob = null;\n\n    this.speed = 0;\n  }\n\n  update() {\n    if(this.isLoaded) {\n      this.buildCheck();\n\n      this.processQueuedUnits();\n    }\n    super.update();\n  }\n\n  onModelLoad() {\n    this.updateMatrix();\n    super.onModelLoad();\n  }\n\n  processQueuedUnits() {\n    for(let i in this.queuedUnits) {\n\n      if(i == 0) {\n        // reduce time left in queue for first object\n        this.queuedUnits[i].timeLeft -= 1;\n      }\n\n      // do something while not done\n\n      // end of loading action\n      if(!this.queuedUnits[i].timeLeft) {\n        switch(this.queuedUnits[i].unit) {\n          case 'cube':\n            let size = new THREE.Vector3(\n              200,\n              200,\n              100\n            );\n\n            // put new object just southwest of building\n            let coordinates = new THREE.Vector3(\n              this.position.x - size.x,\n              this.position.y - size.y,\n              this.position.z\n            );\n\n            let newCube = this.game.addCube(\n              coordinates,\n              size,\n              undefined // name\n            );\n\n            // remove this unit from queuedUnits\n            this.queuedUnits.splice(i, 1);\n\n            // assign unit to do this.newUnitJob\n            if(this.newUnitJob !== null) {\n              newCube.queueJob(this.newUnitJob);\n            } else {\n              // no assigned job, units will stack at spawn location\n            }\n\n            break;\n          default:\n            console.error(`processQueuedUnits(): unknown unit type ${this.queuedUnits[i].unit}`);\n        }\n      }\n    }\n  }\n\n  buildCheck() {\n    if(this.completion >= 100) {\n      // do nothing\n      this.completion = 100;\n      this.status = 'complete';\n      this.updateAppearanceByCompletion();\n      this.updateMatrix();\n    } else {\n      // build\n      this.completion += this.buildQueue;\n      this.buildQueue = 0;\n      this.status = 'incomplete';\n      this.updateAppearanceByCompletion();\n      this.updateMatrix();\n    }\n  }\n\n  /*\n    returns current completion\n  */\n  build(buildAmt) {\n    if(this.completion < 100) {\n      this.buildQueue += this.buildSpeed * buildAmt;\n      return this.completion;\n    } else {\n      return 100;\n    }\n  }\n\n  /*\n    @objArray an array of current selectedObjects\n    @coords the intersection of mouse raycast and this object\n    This is called whenever a player right-clicks on this object while selectedObjects.length > 0\n  */\n  assign(objArray, coords) {\n\n    for(let i in objArray) {\n      // if incomplete, build me\n      if(this.status === 'incomplete') {\n        objArray[i].queueJob({\n          job: 'build',\n          building: this\n        });\n      } else if (this.status == 'complete') {\n        // move towards me\n        objArray[i].queueJob({\n          job: 'move',\n          coordinates: new THREE.Vector3(\n            this.position.x + this.size.x/2,\n            this.position.y + this.size.y/2,\n            this.position.z + this.size.z/2\n          )\n        });\n      }\n    }\n\n    return true; // stop bubbling\n  }\n\n  /*\n    Called once (externally) when assigning new job\n  */\n  queueJob(job) {\n    // process job addition\n    switch(job.job) {\n      case 'move':\n        // sets unit spawn position\n        this.newUnitJob = {\n          job: 'move',\n          coordinates: job.coordinates\n        };\n        break;\n      case 'collectResource':\n        // sets unit spawn position\n        this.newUnitJob = {\n          job: 'collectResource',\n          resourceNode: job.resourceNode\n        };\n        break;\n      default:\n        console.error(`unrecognized job ${job.job}`);\n        break;\n    }\n  }\n\n  select(selected = true) {\n    this.selected = selected;\n  }\n\n  getBuildTime(unit) {\n    unit = unit.toLowerCase();\n    let buildTime = GameSettings[this.buildingType].units[unit].buildTime;\n\n    return buildTime;\n  }\n\n  queueUnit(unit) {\n    let timeLeft = this.getBuildTime(unit);\n    let buildCost = GameSettings[this.buildingType].units[unit].buildCost;\n\n    let canAfford = true;\n\n    if(this.completion < 100) {\n      canAfford = false;\n    }\n\n    for(let i in buildCost) {\n      if(this.game.player.resources[i] < buildCost[i]) {\n        canAfford = false;\n        break;\n      }\n    }\n\n    // charge player unit creation fee\n    if(canAfford) {\n      for(let i in buildCost) {\n        this.game.player.resources[i] -= buildCost[i];\n      }\n\n      this.queuedUnits.push({\n        'unit': unit,\n        'timeLeft': timeLeft\n      });\n    }\n  }\n\n  getInterfaceHtml() {\n    let html = `\n      <p>${this.name} : ${this.type}</p>\n      <ul class=\"actions\">\n        <p>Actions</p>\n        <li><a href=\"#\" onclick=\"window.game.removeBuilding('${this.name}');\">Destroy</a></li>\n      </ul>\n      <ul class=\"queuedUnits\">\n      </ul>\n    `;\n\n    return html;\n  }\n\n  getQueueHTML() {\n    let html = ``;\n\n    for(let i in this.queuedUnits) {\n      html += `\n      <div class=\"queue\">\n        <span class=\"unitType\">${this.queuedUnits[i].unit}</span>\n        <span class=\"timeLeft\">${this.queuedUnits[i].timeLeft}</span>\n      </div>`;\n    }\n\n    return html;\n  }\n\n  getTimeLeftOfQueue(i) {\n    if(this.queuedUnits[i]) {\n      return this.queuedUnits[i].timeLeft;\n    } else {\n      return null;\n    }\n  }\n}\n\nmodule.exports = Building;\n"]}