{"version":3,"sources":["../../game/Game.js"],"names":["THREE","require","CANVAS","document","getElementById","CONTAINER","MENU","SCREEN_WIDTH","width","SCREEN_HEIGHT","height","ASPECT","MAPWIDTH","MAPLENGTH","MAPHEIGHT","SHADOWS","LEVEL","MAP","FOV","MAXFRAMERATE","NEARFRUSTRAM","FAFRUSTRAM","CAMERA_START_X","CAMERA_START_Y","CAMERA_START_Z","SCROLL_SCALE","MAXZOOM","MINZOOM","MOUSEDRAGSENSITIVITY","MENU_WIDTH","parseInt","window","getComputedStyle","getPropertyValue","ColladaLoader","Model","Player","Camera","Menu","LeftMenu","RightMenu","SceneObject","InterfaceObject","SelectionBox","Ground","Cube","WorkerUnit","Building","Mine","Colony","Base","ResourceNode","MetalResourceNode","GoldResourceNode","FoodResourceNode","CONTROLS","leftClick","rightClick","backspace","tab","space","leftArrow","upArrow","rightArrow","downArrow","enter","shift","ctrl","alt","capsLock","delete","num0","num1","num2","num3","num4","num5","num6","num7","num8","num9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","leftApple","rightApple","Game","initializeRenderer","initializeScene","initializeCamera","initializeLight","initializeMouse","onWindowResize","theta","phi","worldMouseCoordinatesStart","Vector3","worldMouseCoordinatesEnd","rightTool","mouseDragSensitivity","loader","textureLoader","TextureLoader","cubes","buildings","resourceNodes","selectedUnits","player","resources","metal","food","gold","loadMap","addSelectionBox","addMenu","watchEvents","loadScenario","grid","GridHelper","rotation","Math","PI","position","set","scene","add","renderScore","renderRightMenu","select","update","setTimeout","that","requestAnimationFrame","render","keyboardCameraControls","renderer","camera","leftMenu","updateScore","score","updateGold","updateFood","updateMetal","rightMenu","addEventListener","onDocumentKeyDown","bind","onDocumentKeyUp","onDocumentMouseMove","onDocumentMouseDown","onDocumentContextMenu","onDocumentMouseUp","onDocumentMouseWheel","traverse","object","console","log","children","unit","name","coordinates","size","cube","undefined","length","match","push","type","status","building","error","getObjectByName","remove","splice","resourceNode","numDeleted","removeBuilding","number","random","addCube","numCubes","removeCube","removeResourceNode","getClosebyUnits","jsonFile","scenario","obj","coords","data","addBuilding","addResourceNode","objects","ground","getHeight","map","canvas","createElement","context","getContext","img","Image","onload","drawImage","imgd","getImageData","mapData","snapUpToGround","concat","src","queueUnit","sceneObject","selectionBox","setSceneObject","gameElem","offsetLeft","detectedHeight","detectedWidth","computedWidth","WebGLRenderer","antialias","setClearColor","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","PCFShadowMap","shadowMapSoft","shadowCameraNear","shadowCameraFar","shadowCameraFov","shadowMapBias","shadowMapDarkness","shadowMapWidth","shadowMapHeight","Scene","lookAt","cos","cameraHelper","CameraHelper","updateProjectionMatrix","ambientLight","AmbientLight","light","DirectionalLight","lightTarget","Object3D","target","castShadow","mouse","Vector2","isMouseDown","mouseDownPosition","raycaster","Raycaster","lastMousePosition","leftTool","aspect","event","which","leftArrowIsDown","rightArrowIsDown","upArrowIsDown","downArrowIsDown","shiftIsDown","wIsDown","aIsDown","sIsDown","dIsDown","newCoords","moveTo","preventDefault","intersects","getObjectsUnderMouse","mouseIsOnGame","point","mouseChangeSinceDown","abs","deselectAllUnits","isRightMouseDown","useRightTool","mouseIntersectPoint","startCoordinates","offsetX","innerWidth","offsetY","innerHeight","deltaX","deltaY","continueCoordinates","getCubesInBox","updateMatrix","setFromCamera","deltaZ","wheelDeltaY","intersectObjects","tool","groundIntersect","nodeTypes","nodeToMake","getRandomInt","rightToolArgs","apply","call","gameObjects","returnValue","assign","recursive","parent","indexOf","args","min","max","floor","module","exports"],"mappings":"AAAA;;;;;;AAMA;;;;;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;;AAEA,IAAMC,SAASC,SAASC,cAAT,CAAwB,MAAxB,CAAf;AACA,IAAMC,YAAYF,SAASC,cAAT,CAAwB,WAAxB,CAAlB;AACA,IAAME,OAAOH,SAASC,cAAT,CAAwB,UAAxB,CAAb;AACA,IAAMG,eAAeL,OAAOM,KAA5B;AACA,IAAMC,gBAAgBP,OAAOQ,MAA7B;AACA,IAAMC,SAASJ,eAAeE,aAA9B;;AAEA;AACA,IAAMG,WAAW,KAAjB;AACA,IAAMC,YAAY,KAAlB;AACA,IAAMC,YAAY,IAAlB;AACA,IAAMC,UAAU,IAAhB;AACA,IAAMC,QAAQf,QAAQ,kCAAR,CAAd;AACA,IAAMgB,MAAM,6BAAZ;;AAEA;AACA,IAAMC,MAAM,EAAZ;AACA,IAAMC,eAAe,OAAO,EAA5B;AACA,IAAMC,eAAe,GAArB;AACA,IAAMC,aAAa,KAAnB;AACA,IAAMC,iBAAiB,IAAvB;AACA,IAAMC,iBAAiB,IAAvB;AACA,IAAMC,iBAAiB,IAAvB;AACA,IAAMC,eAAe,CAArB;;AAEA;AACA,IAAMC,UAAU,IAAhB;AACA,IAAMC,UAAU,IAAhB;AACA,IAAMC,uBAAuB,KAA7B;AACA,IAAMC,aAAaC,SAASC,OAAOC,gBAAP,CAAwB1B,IAAxB,EAA8B,IAA9B,EAAoC2B,gBAApC,CAAqD,OAArD,CAAT,CAAnB;;AAEA;AACA,IAAMC,gBAAgBjC,QAAQ,4BAAR,CAAtB;AACA,IAAMkC,QAAQlC,QAAQ,oBAAR,CAAd;AACA,IAAMmC,SAASnC,QAAQ,qBAAR,CAAf;AACA,IAAMoC,SAASpC,QAAQ,qBAAR,CAAf;AACA,IAAMqC,OAAOrC,QAAQ,wBAAR,CAAb;AACA,IAAMsC,WAAWtC,QAAQ,4BAAR,CAAjB;AACA,IAAMuC,YAAYvC,QAAQ,6BAAR,CAAlB;AACA,IAAMwC,cAAcxC,QAAQ,0BAAR,CAApB;AACA,IAAMyC,kBAAkBzC,QAAQ,8CAAR,CAAxB;AACA,IAAM0C,eAAe1C,QAAQ,2CAAR,CAArB;AACA,IAAM2C,SAAS3C,QAAQ,qBAAR,CAAf;AACA,IAAM4C,OAAO5C,QAAQ,mBAAR,CAAb;AACA,IAAM6C,aAAa7C,QAAQ,2BAAR,CAAnB;AACA,IAAM8C,WAAW9C,QAAQ,gCAAR,CAAjB;AACA,IAAM+C,OAAO/C,QAAQ,4BAAR,CAAb;AACA,IAAMgD,SAAShD,QAAQ,8BAAR,CAAf;AACA,IAAMiD,OAAOjD,QAAQ,4BAAR,CAAb;AACA,IAAMkD,eAAelD,QAAQ,wCAAR,CAArB;AACA,IAAMmD,oBAAoBnD,QAAQ,6CAAR,CAA1B;AACA,IAAMoD,mBAAmBpD,QAAQ,4CAAR,CAAzB;AACA,IAAMqD,mBAAmBrD,QAAQ,4CAAR,CAAzB;;AAEA,IAAMsD,WAAW;AACfC,aAAW,CADI;AAEfC,cAAY,CAFG;AAGfC,aAAW,CAHI;AAIfC,OAAK,CAJU;AAKfC,SAAO,EALQ;AAMfC,aAAW,EANI;AAOfC,WAAS,EAPM;AAQfC,cAAY,EARG;AASfC,aAAW,EATI;AAUfC,SAAO,EAVQ;AAWfC,SAAO,EAXQ;AAYfC,QAAM,EAZS;AAafC,OAAK,EAbU;AAcfC,YAAU,EAdK,EAcD;AACdC,UAAQ,EAfO;AAgBfC,QAAM,EAhBS;AAiBfC,QAAM,EAjBS;AAkBfC,QAAM,EAlBS;AAmBfC,QAAM,EAnBS;AAoBfC,QAAM,EApBS;AAqBfC,QAAM,EArBS;AAsBfC,QAAM,EAtBS;AAuBfC,QAAM,EAvBS;AAwBfC,QAAM,EAxBS;AAyBfC,QAAM,EAzBS;AA0BfC,KAAG,EA1BY;AA2BfC,KAAG,EA3BY;AA4BfC,KAAG,EA5BY;AA6BfC,KAAG,EA7BY;AA8BfC,KAAG,EA9BY;AA+BfC,KAAG,EA/BY;AAgCfC,KAAG,EAhCY;AAiCfC,KAAG,EAjCY;AAkCfC,KAAG,EAlCY;AAmCfC,KAAG,EAnCY;AAoCfC,KAAG,EApCY;AAqCfC,KAAG,EArCY;AAsCfC,KAAG,EAtCY;AAuCfC,KAAG,EAvCY;AAwCfC,KAAG,EAxCY;AAyCfC,KAAG,EAzCY;AA0CfC,KAAG,EA1CY;AA2CfC,KAAG,EA3CY;AA4CfC,KAAG,EA5CY;AA6CfC,KAAG,EA7CY;AA8CfC,KAAG,EA9CY;AA+CfC,KAAG,EA/CY;AAgDfC,KAAG,EAhDY;AAiDfC,KAAG,EAjDY;AAkDfC,KAAG,EAlDY;AAmDfC,KAAG,EAnDY;AAoDfC,aAAW,EApDI;AAqDfC,cAAY;AArDG,CAAjB;;IAwDMC,I;AACF,kBAAc;AAAA;;AACZ,SAAKC,kBAAL;AACA,SAAKC,eAAL;AACA,SAAKC,gBAAL;AACA,SAAKC,eAAL;AACA,SAAKC,eAAL;AACA,SAAKC,cAAL;;AAEA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,GAAL,GAAW,EAAX;AACA,SAAKC,0BAAL,GAAkC,IAAItH,MAAMuH,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAlC;AACA,SAAKC,wBAAL,GAAgC,IAAIxH,MAAMuH,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,CAAhC;;AAEA,SAAKE,SAAL,GAAiB,kBAAjB;;AAEA,SAAKC,oBAAL,GAA4B9F,oBAA5B;;AAEA,SAAK+F,MAAL,GAAc,IAAI3H,MAAMkC,aAAV,EAAd;AACA,SAAK0F,aAAL,GAAqB,IAAI5H,MAAM6H,aAAV,EAArB;;AAEA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,aAAL,GAAqB,EAArB;;AAEA,SAAKC,aAAL,GAAqB,EAArB;;AAEA,SAAKC,MAAL,GAAc,IAAI9F,MAAJ,EAAd;AACA,SAAK8F,MAAL,CAAYC,SAAZ,CAAsBC,KAAtB,GAA8B,IAA9B;AACA,SAAKF,MAAL,CAAYC,SAAZ,CAAsBE,IAAtB,GAA6B,IAA7B;AACA,SAAKH,MAAL,CAAYC,SAAZ,CAAsBG,IAAtB,GAA6B,IAA7B;;AAEA,SAAKC,OAAL,CAAatH,GAAb;;AAEA,SAAKuH,eAAL;;AAEA,SAAKC,OAAL;;AAEA,SAAKC,WAAL;;AAEA,SAAKC,YAAL,CAAkB3H,KAAlB;;AAEA;AACA,SAAK4H,IAAL,GAAY,IAAI5I,MAAM6I,UAAV,CAAqB,IAArB,EAA2B,EAA3B,CAAZ;AACA,SAAKD,IAAL,CAAUE,QAAV,CAAmBtC,CAAnB,GAAuBuC,KAAKC,EAAL,GAAU,CAAjC;AACA,SAAKJ,IAAL,CAAUK,QAAV,CAAmBC,GAAnB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B;AACA,SAAKC,KAAL,CAAWC,GAAX,CAAe,KAAKR,IAApB;AACD;;;;6BAEQ;AACL,WAAKS,WAAL;AACA,WAAKC,eAAL;;AAEA,WAAI,IAAI7D,CAAR,IAAa,KAAKwC,aAAlB,EAAiC;AAC/B,aAAKA,aAAL,CAAmBxC,CAAnB,EAAsB8D,MAAtB,CAA6B,IAA7B;AACD;;AAED,WAAI,IAAI9D,EAAR,IAAa,KAAKqC,KAAlB,EAAyB;AACvB,aAAKA,KAAL,CAAWrC,EAAX,EAAc+D,MAAd;AACD;;AAED,WAAI,IAAI/D,GAAR,IAAa,KAAKuC,aAAlB,EAAiC;AAC/B,aAAKA,aAAL,CAAmBvC,GAAnB,EAAsB+D,MAAtB;AACD;;AAED,WAAI,IAAI/D,GAAR,IAAa,KAAKsC,SAAlB,EAA6B;AAC3B,aAAKA,SAAL,CAAetC,GAAf,EAAkB+D,MAAlB;AACD;AACJ;;;6BAEQ;AAAA;;AACP;AACAC,iBAAW,YAAM;AACf,YAAIC,YAAJ;AACAC,8BAAsB,YAAM;AAC1BD,eAAKE,MAAL;AACD,SAFD;AAGD,OALD,EAKGzI,YALH;;AAOA;AACA,WAAKqI,MAAL;AACA;AACA,WAAKK,sBAAL;AACA,WAAKC,QAAL,CAAcF,MAAd,CAAqB,KAAKT,KAA1B,EAAiC,KAAKY,MAAtC;AACD;;;kCAEa;AACZ,WAAKC,QAAL,CAAcC,WAAd,CAA0B,KAAK/B,MAAL,CAAYgC,KAAtC;AACA,WAAKF,QAAL,CAAcG,UAAd,CAAyB,KAAKjC,MAAL,CAAYC,SAAZ,CAAsBG,IAA/C;AACA,WAAK0B,QAAL,CAAcI,UAAd,CAAyB,KAAKlC,MAAL,CAAYC,SAAZ,CAAsBE,IAA/C;AACA,WAAK2B,QAAL,CAAcK,WAAd,CAA0B,KAAKnC,MAAL,CAAYC,SAAZ,CAAsBC,KAAhD;AACD;;;sCAEiB;AAChB,WAAKkC,SAAL,CAAeV,MAAf;AACD;;;kCAEa;AACZ;AACAzJ,eAASoK,gBAAT,CAA0B,SAA1B,EAAqC,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAArC,EAAwE,KAAxE;AACAtK,eAASoK,gBAAT,CAA0B,OAA1B,EAAmC,KAAKG,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAnC,EAAoE,KAApE;;AAEA;AACDtK,eAASoK,gBAAT,CAA0B,WAA1B,EAAuC,KAAKI,mBAAL,CAAyBF,IAAzB,CAA8B,IAA9B,CAAvC,EAA4E,KAA5E;AACAtK,eAASoK,gBAAT,CAA0B,WAA1B,EAAuC,KAAKK,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAAvC,EAA4E,KAA5E;AACCtK,eAASoK,gBAAT,CAA0B,aAA1B,EAAyC,KAAKM,qBAAL,CAA2BJ,IAA3B,CAAgC,IAAhC,CAAzC,EAAgF,KAAhF;AACDtK,eAASoK,gBAAT,CAA0B,SAA1B,EAAqC,KAAKO,iBAAL,CAAuBL,IAAvB,CAA4B,IAA5B,CAArC,EAAwE,KAAxE;AACCtK,eAASoK,gBAAT,CAA0B,YAA1B,EAAwC,KAAKQ,oBAAL,CAA0BN,IAA1B,CAA+B,IAA/B,CAAxC,EAA8E,KAA9E;;AAEA;AACA1I,aAAOwI,gBAAP,CAAwB,QAAxB,EAAkC,KAAKpD,cAAL,CAAoBsD,IAApB,CAAyB,IAAzB,CAAlC,EAAkE,KAAlE;AACD;;;yCAEoB;AACnB,WAAKtB,KAAL,CAAW6B,QAAX,CAAoB,UAACC,MAAD,EAAY;AAC9BC,gBAAQC,GAAR,CAAYF,MAAZ;AACD,OAFD;AAGD;;;iDAE4B;AAC3B,WAAI,IAAIxF,CAAR,IAAa,KAAK0D,KAAL,CAAWiC,QAAxB,EAAkC;AAChC,YAAIC,OAAO,KAAKlC,KAAL,CAAWiC,QAAX,CAAoB3F,CAApB,CAAX;AACAyF,gBAAQC,GAAR,CAAYE,KAAKC,IAAjB;AACAJ,gBAAQC,GAAR,CAAYE,KAAKpC,QAAjB;AACD;AACF;;AAED;;;;;;;4BAIQsC,W,EAAaC,I,EAAMF,I,EAAM;AAC/B,UAAGC,gBAAgB,IAAnB,EAAyB;AACvB,YAAIE,OAAO,IAAI5I,IAAJ,CACT,IADS,EACC;AACV2I,YAFS,EAGTE,SAHS,CAGC;AAHD,SAAX;;AAMA;AACA,YAAGJ,SAASI,SAAZ,EAAuB;AACrB,cAAG,KAAK5D,KAAL,CAAW6D,MAAX,GAAoB,CAAvB,EAA0B;AACxB;AACAL,mBAAO,UAAUxJ,SAAS,KAAKgG,KAAL,CAAW,KAAKA,KAAL,CAAW6D,MAAX,GAAoB,CAA/B,EAAkCL,IAAlC,CAAuCM,KAAvC,CAA6C,KAA7C,CAAT,IAAgE,CAA1E,CAAP;AACD,WAHD,MAGO;AACLN;AACD;AACF;;AAEDG,aAAKH,IAAL,GAAYA,IAAZ;AACAG,aAAKxC,QAAL,CAAcC,GAAd,CAAkBqC,YAAY/E,CAA9B,EAAiC+E,YAAY9E,CAA7C,EAAgD8E,YAAY7E,CAA5D;;AAEA,aAAKyC,KAAL,CAAWC,GAAX,CAAeqC,IAAf;AACA,aAAK3D,KAAL,CAAW+D,IAAX,CAAgBJ,IAAhB;;AAEA,eAAOA,IAAP;AACD,OAxBD,MAwBO;AACL;AACD;AACF;;;gCAEWF,W,EAAaC,I,EAAMF,I,EAAMQ,I,EAAMC,M,EAAQ;;AAEjD,UAAGT,SAASI,SAAZ,EAAuB;AACrBJ,4BAAkB,KAAKxD,KAAL,CAAW6D,MAA7B;AACD;;AAED,UAAGI,WAAWL,SAAd,EAAyB;AACvBK,iBAAS,YAAT;AACD;;AAED,UAAIC,iBAAJ;AACA,cAAOF,IAAP;AACE,aAAK,MAAL;AACEE,qBAAW,IAAIhJ,IAAJ,CACT,IADS,EAETwI,IAFS,EAGTM,IAHS,EAITC,MAJS,CAAX;AAMA;AACF,aAAK,QAAL;AACEC,qBAAW,IAAI/I,MAAJ,CACT,IADS,EAETuI,IAFS,EAGTM,IAHS,EAITC,MAJS,CAAX;AAMA;AACF,aAAK,MAAL;AACEC,qBAAW,IAAI9I,IAAJ,CACT,IADS,EAETsI,IAFS,EAGTM,IAHS,EAITC,MAJS,CAAX;AAMA;AACF;AACEb,kBAAQe,KAAR,iCAA4CH,IAA5C;AACA;AA3BJ;;AA8BAE,eAASV,IAAT,GAAgBA,IAAhB;AACAU,eAAS/C,QAAT,CAAkBC,GAAlB,CAAsBqC,YAAY/E,CAAlC,EAAqC+E,YAAY9E,CAAjD,EAAoD8E,YAAY7E,CAAhE;;AAEA,WAAKqB,SAAL,CAAe8D,IAAf,CAAoBG,QAApB;AACD;;;mCAEcA,Q,EAAU;AACvB,UAAGA,SAASV,IAAT,KAAkBI,SAArB,EAAgC;AAC9BM,mBAAW,KAAK7C,KAAL,CAAW+C,eAAX,CAA2BF,QAA3B,CAAX;AACD;AACD;AACA,WAAK7C,KAAL,CAAWgD,MAAX,CAAkBH,QAAlB;;AAEA;AACA,WAAI,IAAIvG,CAAR,IAAa,KAAKsC,SAAlB,EAA6B;AAC3B,YAAG,KAAKA,SAAL,CAAetC,CAAf,KAAqBuG,QAAxB,EAAkC;AAChC,eAAKjE,SAAL,CAAeqE,MAAf,CAAsB3G,CAAtB,EAAyB,CAAzB;AACD;AACF;AACF;;;uCAEkB4G,Y,EAAc;;AAE/B;AACA,WAAKlD,KAAL,CAAWgD,MAAX,CAAkBE,YAAlB;;AAEA;AACA,WAAI,IAAI5G,CAAR,IAAa,KAAKuC,aAAlB,EAAiC;AAC/B,YAAG,KAAKA,aAAL,CAAmBvC,CAAnB,KAAyB4G,YAA5B,EAA0C;AACxC,eAAKrE,aAAL,CAAmBoE,MAAnB,CAA0B3G,CAA1B,EAA6B,CAA7B;AACD;AACF;AACF;;;yCAEoB;AACnB,UAAI6G,aAAa,CAAjB;AACA,WAAI,IAAI7G,IAAI,KAAKqC,KAAL,CAAW6D,MAAX,GAAoB,CAAhC,EAAmClG,KAAK,CAAxC,EAA2CA,GAA3C,EAAgD;AAC9C,aAAK8G,cAAL,CAAoB,KAAKxE,SAAL,CAAetC,CAAf,CAApB;AACD;AACF;;AAED;;;;;;;;oCAKgB8F,W,EAAaC,I,EAAMM,I,EAAM;AACvC,UAAGP,gBAAgB,IAAnB,EAAyB;AACvB,YAAIc,qBAAJ;;AAEA,gBAAOP,IAAP;AACE,eAAK,OAAL;AACEO,2BAAe,IAAIjJ,iBAAJ,CACb,IADa,EAEbsI,SAFa,EAEF;AACX,gBAHa,CAGR;AAHQ,aAAf;AAKA;AACF,eAAK,MAAL;AACEW,2BAAe,IAAI/I,gBAAJ,CACb,IADa,EAEboI,SAFa,EAEF;AACX,gBAHa,CAGR;AAHQ,aAAf;AAKA;AACF,eAAK,MAAL;AACEW,2BAAe,IAAIhJ,gBAAJ,CACb,IADa,EAEbqI,SAFa,EAEF;AACX,gBAHa,CAGR;AAHQ,aAAf;AAKA;AACF;AACER,oBAAQe,KAAR,CAAc,2BAAd;AACA;AAxBJ;;AA2BA,YAAIX,wBAAsB,KAAKtD,aAAL,CAAmB2D,MAA7C;;AAEAU,qBAAaf,IAAb,GAAoBA,IAApB;AACAe,qBAAapD,QAAb,CAAsBC,GAAtB,CAA0BqC,YAAY/E,CAAtC,EAAyC+E,YAAY9E,CAArD,EAAwD8E,YAAY7E,CAApE;;AAEA,aAAKyC,KAAL,CAAWC,GAAX,CAAeiD,YAAf;AACA,aAAKrE,aAAL,CAAmB6D,IAAnB,CAAwBQ,YAAxB;AACD;AACF;;AAED;;;;;;mCAGeG,M,EAAQ;AACrB,WAAI,IAAI/G,IAAI,CAAZ,EAAeA,IAAI+G,MAAnB,EAA2B/G,GAA3B,EAAgC;AAC9B,YAAIgH,SAAS1D,KAAK0D,MAAL,EAAb;AACA,YAAIjM,QAAQiM,SAAS,GAArB;AACA,YAAId,SAASc,SAAS,GAAtB;AACA,YAAI/L,SAAS+L,SAAS,GAAtB;AACA,YAAIjB,OAAO,IAAIxL,MAAMuH,OAAV,CAAkB/G,KAAlB,EAAyBmL,MAAzB,EAAiCjL,MAAjC,CAAX;AACA,YAAI6K,cAAc,IAAIvL,MAAMuH,OAAV,CAAkBwB,KAAK0D,MAAL,KAAgB7L,QAAlC,EAA4CmI,KAAK0D,MAAL,KAAgB5L,SAA5D,EAAuE4L,SAAS,EAAhF,CAAlB;AACA,YAAInB,gBAAc,KAAKxD,KAAL,CAAW6D,MAA7B;;AAEA,aAAKe,OAAL,CAAanB,WAAb,EAA0BC,IAA1B,EAAgCF,IAAhC;AACD;AACF;;;qCAEgB;AACf,UAAIgB,aAAa,CAAjB;AACA,UAAIK,WAAW,KAAK7E,KAAL,CAAW6D,MAA1B;AACA,WAAI,IAAIlG,IAAG,CAAX,EAAcA,IAAIkH,QAAlB,EAA4BlH,GAA5B,EAAiC;AAC/B,aAAKmH,UAAL,CAAgB,KAAK9E,KAAL,CAAW,CAAX,CAAhB;AACAwE;AACD;AACF;;;qCAEgB;AACf;AACA,WAAI,IAAI7G,IAAI,KAAKwC,aAAL,CAAmB0D,MAAnB,GAA4B,CAAxC,EAA2ClG,KAAK,CAAhD,EAAmDA,GAAnD,EAAyD;AACvD,gBAAO,KAAKwC,aAAL,CAAmBxC,CAAnB,EAAsBqG,IAA7B;AACE,eAAK,UAAL;AACE,iBAAKS,cAAL,CAAoB,KAAKtE,aAAL,CAAmBxC,CAAnB,CAApB;AACA;AACF,eAAK,MAAL;AACE,iBAAKmH,UAAL,CAAgB,KAAK3E,aAAL,CAAmBxC,CAAnB,CAAhB;AACA;AACF,eAAK,cAAL;AACE,iBAAKoH,kBAAL,CAAwB,KAAK5E,aAAL,CAAmBxC,CAAnB,CAAxB;AACA;AACF;AACEyF,oBAAQe,KAAR,wBAAmC,KAAKhE,aAAL,CAAmBxC,CAAnB,EAAsBqG,IAAzD;AAXJ;AAaA,aAAKc,UAAL,CAAgB,KAAK3E,aAAL,CAAmBxC,CAAnB,CAAhB;AACD;AACF;;;mCAEc;AACb,WAAI,IAAIA,CAAR,IAAa,KAAKqC,KAAlB,EAAyB;AACvBoD,gBAAQC,GAAR,CAAY,KAAKrD,KAAL,CAAWrC,CAAX,CAAZ;AACD;AACF;;;uCAEkB;AACjB,WAAI,IAAIA,CAAR,IAAa,KAAKsC,SAAlB,EAA6B;AAC3BmD,gBAAQC,GAAR,CAAY,KAAKpD,SAAL,CAAetC,CAAf,CAAZ;AACD;AACF;;;wCAEmB;AAClByF,cAAQC,GAAR,CAAY,KAAKlD,aAAjB;AACD;;;gDAE2B;AAC1B,WAAI,IAAIxC,CAAR,IAAa,KAAKwC,aAAlB,EAAiC;AAC/BiD,gBAAQC,GAAR,CAAY,KAAKlD,aAAL,CAAmBxC,CAAnB,EAAsBqH,eAAtB,EAAZ;AACD;AACF;;;iCAEYC,Q,EAAU;AACrB,WAAKC,QAAL,GAAgBD,QAAhB;;AAEA,WAAI,IAAItH,CAAR,IAAa,KAAKuH,QAAlB,EAA4B;AAC1B,YAAIC,MAAM,KAAKD,QAAL,CAAcvH,CAAd,CAAV;AACA,YAAIyH,eAAJ;AACA,YAAI1B,aAAJ;AACA,YAAIF,aAAJ;AACA,YAAIQ,aAAJ;;AAEA,gBAAOmB,IAAInB,IAAX;AACE,eAAK,MAAL;AACEoB,qBAASD,IAAIE,IAAJ,CAAS5B,WAAlB;AACAC,mBAAOyB,IAAIE,IAAJ,CAAS3B,IAAhB;AACAF,mBAAO2B,IAAIE,IAAJ,CAAS7B,IAAhB;;AAEA,iBAAKoB,OAAL,CAAaQ,MAAb,EAAqB1B,IAArB,EAA2BF,IAA3B;AACA;AACF,eAAK,UAAL;;AAEE,iBAAK8B,WAAL,CACEH,IAAIE,IAAJ,CAAS5B,WADX,EAEE0B,IAAIE,IAAJ,CAAS3B,IAFX,EAGEyB,IAAIE,IAAJ,CAAS7B,IAHX,EAIE2B,IAAIE,IAAJ,CAASrB,IAJX,EAKEmB,IAAIE,IAAJ,CAASpB,MALX;AAOA;AACF,eAAK,cAAL;AACEmB,qBAASD,IAAIE,IAAJ,CAAS5B,WAAlB;AACAC,mBAAOyB,IAAIE,IAAJ,CAAS3B,IAAhB;AACAM,mBAAOmB,IAAIE,IAAJ,CAASrB,IAAhB;;AAEA,iBAAKuB,eAAL,CAAqBH,MAArB,EAA6B1B,IAA7B,EAAmCM,IAAnC;AACA;AACF;AACEZ,oBAAQe,KAAR,0DAAqEgB,IAAInB,IAAzE;AACA;AA3BJ;AA6BD;AACF;;;mCAEcwB,O,EAAS;;AAEtB,WAAI,IAAI7H,CAAR,IAAa6H,OAAb,EAAsB;AACpB,YAAI5M,SAAS,KAAK6M,MAAL,CAAYC,SAAZ,CAAsBF,QAAQ7H,CAAR,EAAWwD,QAAX,CAAoBzC,CAA1C,EAA6C8G,QAAQ7H,CAAR,EAAWwD,QAAX,CAAoBxC,CAAjE,CAAb;;AAEA,YAAG6G,QAAQ7H,CAAR,EAAWwD,QAAX,CAAoBvC,CAApB,GAAwBhG,MAA3B,EAAmC;AACjC4M,kBAAQ7H,CAAR,EAAWwD,QAAX,CAAoBvC,CAApB,GAAwBhG,MAAxB;AACD;AACF;AACF;;AAED;;;;;;4BAGQ+M,G,EAAK;AAAA;;AAEX;AACA,UAAIC,SAAS3L,OAAO5B,QAAP,CAAgBwN,aAAhB,CAA8B,QAA9B,CAAb;AACA,UAAIC,UAAUF,OAAOG,UAAP,CAAkB,IAAlB,CAAd;;AAEA,UAAIC,MAAM,IAAIC,KAAJ,EAAV;;AAEA;AACAD,UAAIE,MAAJ,GAAa,UAAC3I,CAAD,EAAO;;AAElBqI,eAAOlN,KAAP,GAAesN,IAAItN,KAAnB;AACAkN,eAAOhN,MAAP,GAAgBoN,IAAIpN,MAApB;;AAEA;AACAkN,gBAAQK,SAAR,CAAkBH,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B;;AAEA;AACA,YAAII,OAAON,QAAQO,YAAR,CAAqB,CAArB,EAAwB,CAAxB,EAA2BL,IAAItN,KAA/B,EAAsCsN,IAAIpN,MAA1C,CAAX;;AAEA;AACA,YAAI0N,UAAU,EAAd;;AAEA;AACA,aAAI,IAAI3I,IAAI,CAAZ,EAAeA,IAAIyI,KAAKf,IAAL,CAAUxB,MAA7B,EAAqClG,KAAK,CAA1C,EAA6C;AAC3C,cAAIS,IAAIgI,KAAKf,IAAL,CAAU1H,CAAV,CAAR;AACA,cAAIF,IAAI2I,KAAKf,IAAL,CAAU1H,IAAE,CAAZ,CAAR;AACA,cAAIP,IAAIgJ,KAAKf,IAAL,CAAU1H,IAAE,CAAZ,CAAR;AACA,cAAIR,IAAIiJ,KAAKf,IAAL,CAAU1H,IAAE,CAAZ,CAAR;;AAEA,cAAIL,IAAI,CAACc,IAAIhB,CAAJ,GAAQK,CAAT,IAAc,CAAtB;;AAEA6I,kBAAQvC,IAAR,CAAazG,CAAb;AACD;;AAED,eAAKmI,MAAL,GAAc,IAAI3K,MAAJ,SAAiBhC,QAAjB,EAA2BC,SAA3B,EAAsCuN,OAAtC,CAAd;;AAEA,eAAKC,cAAL,CAAoB,GAAGC,MAAH,CAClB,OAAKxG,KADa,EAElB,OAAKC,SAFa,EAGlB,OAAKC,aAHa,CAApB;AAKD,OAjCD;;AAmCA8F,UAAIS,GAAJ,GAAUd,GAAV;AACD;;;8BAES;AACR,WAAKzD,QAAL,GAAgB,IAAIzH,QAAJ,CAAa,IAAb,CAAhB;AACA,WAAK+H,SAAL,GAAiB,IAAI9H,SAAJ,CAAc,IAAd,CAAjB;AACD;;;4BAEO0K,M,EAAQ;AACd,UAAG,CAACA,MAAJ,EAAY;AACVA,iBAAS,IAAIlN,MAAMuH,OAAV,CACPwB,KAAK0D,MAAL,KAAgB7L,QADT,EACmBmI,KAAK0D,MAAL,KAAgB5L,SADnC,EAC8C,EAD9C,CAAT;AAGD;;AAED,WAAK6L,OAAL,CAAaQ,MAAb;AACD;;AAED;;;;;;8BAGU7B,I,EAAMW,Q,EAAU;AACxBA,iBAAW,KAAK7C,KAAL,CAAW+C,eAAX,CAA2BF,QAA3B,CAAX;AACAA,eAASwC,SAAT,CAAmBnD,IAAnB;AACD;;;+BAEUoD,W,EAAa;AACtB;AACA,WAAKtF,KAAL,CAAWgD,MAAX,CAAkBsC,WAAlB;;AAEA;AACA,WAAI,IAAIhJ,CAAR,IAAa,KAAKqC,KAAlB,EAAyB;AACvB,YAAG,KAAKA,KAAL,CAAWrC,CAAX,KAAiBgJ,WAApB,EAAiC;AAC/B,eAAK3G,KAAL,CAAWsE,MAAX,CAAkB3G,CAAlB,EAAqB,CAArB;AACD;AACF;;AAED;AACA,WAAI,IAAIA,GAAR,IAAa,KAAKwC,aAAlB,EAAiC;AAC/B,YAAG,KAAKA,aAAL,CAAmBxC,GAAnB,KAAyBgJ,WAA5B,EAAyC;AACvC,eAAKxG,aAAL,CAAmBmE,MAAnB,CAA0B3G,GAA1B,EAA6B,CAA7B;AACD;AACF;AACF;;;sCAEiB;AAChB,WAAKiJ,YAAL,GAAoB,IAAI/L,YAAJ,EAApB;AACA,WAAKwG,KAAL,CAAWC,GAAX,CAAe,KAAKsF,YAApB;AACA,WAAKA,YAAL,CAAkBC,cAAlB,CAAiC,KAAKxF,KAAL,CAAW+C,eAAX,CAA2B,cAA3B,CAAjC;AACD;;;yCAEoB;AACnB,WAAK/C,KAAL,CAAWgD,MAAX,CAAkB,KAAKuC,YAAvB;AACA,WAAKA,YAAL,GAAoB,IAApB;AACD;;;yCAEoB;AACnB,WAAKE,QAAL,GAAgB7M,OAAOC,gBAAP,CAAwB9B,MAAxB,EAAgC,IAAhC,CAAhB;AACA,WAAK0O,QAAL,CAAcC,UAAd,GAA2B/M,SAAS,KAAK8M,QAAL,CAAc3M,gBAAd,CAA+B,aAA/B,CAAT,CAA3B;AACA,WAAK2M,QAAL,CAAcE,cAAd,GAA+BhN,SAAS,KAAK8M,QAAL,CAAc3M,gBAAd,CAA+B,QAA/B,CAAT,CAA/B;AACA,WAAK2M,QAAL,CAAcG,aAAd,GAA8BjN,SAAS,KAAK8M,QAAL,CAAc3M,gBAAd,CAA+B,OAA/B,CAAT,CAA9B;AACA,WAAK2M,QAAL,CAAcI,aAAd,GAA8B,KAAKJ,QAAL,CAAcG,aAAd,GAA8B,KAAKH,QAAL,CAAcC,UAA1E;;AAEA;AACA,WAAK/E,QAAL,GAAgB,IAAI9J,MAAMiP,aAAV,CAAwB;AACtCC,mBAAW,IAD2B;AAEtCxB,gBAAQxN;AAF8B,OAAxB,CAAhB;AAIA,WAAK4J,QAAL,CAAcqF,aAAd,CAA4B,QAA5B;AACA,WAAKrF,QAAL,CAAcsF,aAAd,CAA4BrN,OAAOsN,gBAAnC;AACA,WAAKvF,QAAL,CAAcwF,OAAd,CAAsB,KAAKV,QAAL,CAAcI,aAApC,EAAmD,KAAKJ,QAAL,CAAcE,cAAjE,EAAiF,KAAjF;;AAEA;AACA,WAAKhF,QAAL,CAAcyF,SAAd,CAAwBC,OAAxB,GAAkC,IAAlC;AACA,WAAK1F,QAAL,CAAcyF,SAAd,CAAwBzD,IAAxB,GAA+B9L,MAAMyP,YAArC;AACA,WAAK3F,QAAL,CAAc4F,aAAd,GAA8B,IAA9B,CAnBmB,CAmBiB;;AAEpC,WAAK5F,QAAL,CAAc6F,gBAAd,GAAiC,CAAjC;AACA,WAAK7F,QAAL,CAAc8F,eAAd,GAAgC,KAAhC;AACA,WAAK9F,QAAL,CAAc+F,eAAd,GAAgC,EAAhC;;AAEA,WAAK/F,QAAL,CAAcgG,aAAd,GAA8B,MAA9B;AACA,WAAKhG,QAAL,CAAciG,iBAAd,GAAkC,GAAlC;AACA,WAAKjG,QAAL,CAAckG,cAAd,GAA+BpP,QAA/B;AACA,WAAKkJ,QAAL,CAAcmG,eAAd,GAAgCpP,SAAhC;AACD;;;sCAEiB;AAChB,WAAKsI,KAAL,GAAa,IAAInJ,MAAMkQ,KAAV,EAAb;AACD;;;uCAEkB;AACjB,WAAKnG,MAAL,GAAc,IAAI1H,MAAJ,CAAWnB,GAAX,EAAgBP,MAAhB,EAAwBS,YAAxB,EAAsCC,UAAtC,EAAkDC,cAAlD,EAAkEC,cAAlE,EAAkFC,cAAlF,EAAkGZ,QAAlG,EAA4GC,SAA5G,EAAuHa,OAAvH,EAAgIC,OAAhI,CAAd;;AAEA,WAAKoI,MAAL,CAAYoG,MAAZ,CAAmB,IAAInQ,MAAMuH,OAAV,CAAkB3G,WAAW,CAA7B,EAAgCC,YAAY,CAA5C,EAA+C,CAA/C,CAAnB;;AAEA,WAAKkJ,MAAL,CAAYjB,QAAZ,CAAqBtC,CAArB,GAAyB,CAACuC,KAAKqH,GAAL,CAASrH,KAAKC,EAAL,GAAU,IAAnB,CAA1B;AACA,WAAKe,MAAL,CAAYjB,QAAZ,CAAqBrC,CAArB,GAAyB,CAAzB;AACA,WAAKsD,MAAL,CAAYjB,QAAZ,CAAqBpC,CAArB,GAAyB,CAAzB;;AAEA,WAAK2J,YAAL,GAAoB,IAAIrQ,MAAMsQ,YAAV,CAAuB,KAAKvG,MAA5B,CAApB;AACA,WAAKA,MAAL,CAAYwG,sBAAZ;AACD;;;sCAEiB;;AAEhB,WAAKC,YAAL,GAAoB,IAAIxQ,MAAMyQ,YAAV,CAAuB,QAAvB,CAApB;;AAEA,WAAKC,KAAL,GAAa,IAAI1Q,MAAM2Q,gBAAV,CAA2B,QAA3B,EAAqC,CAArC,CAAb;;AAEA,WAAKC,WAAL,GAAmB,IAAI5Q,MAAM6Q,QAAV,EAAnB;AACA,WAAKD,WAAL,CAAiB3H,QAAjB,CAA0BC,GAA1B,CACEtI,WAAW,CADb,EAEEC,YAAY,CAFd,EAGE,CAHF;AAKA,WAAKsI,KAAL,CAAWC,GAAX,CAAe,KAAKwH,WAApB;AACA,WAAKF,KAAL,CAAWI,MAAX,GAAoB,KAAKF,WAAzB;AACA,WAAKF,KAAL,CAAWK,UAAX,GAAwB,IAAxB;AACA,WAAKL,KAAL,CAAWzH,QAAX,CAAoBC,GAApB,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,IAA9B;;AAEA,WAAKC,KAAL,CAAWC,GAAX,CAAe,KAAKoH,YAApB;AACA,WAAKrH,KAAL,CAAWC,GAAX,CAAe,KAAKsH,KAApB;AACD;;;sCAEiB;AAChB,WAAKM,KAAL,GAAa,IAAIhR,MAAMiR,OAAV,EAAb;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKC,iBAAL,GAAyB,IAAInR,MAAMiR,OAAV,EAAzB;AACA,WAAKG,SAAL,GAAiB,IAAIpR,MAAMqR,SAAV,EAAjB;;AAEA,WAAKC,iBAAL,GAAyB,IAAItR,MAAMiR,OAAV,EAAzB;;AAEA,WAAKM,QAAL,GAAgB,QAAhB;AACA,WAAK9J,SAAL,GAAiB,YAAjB;AACD;;;gCAEW;AACV,aAAO,KAAKS,MAAZ;AACD;;;qCAEgB;AACf,WAAK0G,QAAL,CAAcC,UAAd,GAA2B/M,SAAS,KAAK8M,QAAL,CAAc3M,gBAAd,CAA+B,aAA/B,CAAT,CAA3B;AACA,WAAK2M,QAAL,CAAcE,cAAd,GAA+BhN,SAAS,KAAK8M,QAAL,CAAc3M,gBAAd,CAA+B,QAA/B,CAAT,CAA/B;AACA,WAAK2M,QAAL,CAAcG,aAAd,GAA8BjN,SAAS,KAAK8M,QAAL,CAAc3M,gBAAd,CAA+B,OAA/B,CAAT,CAA9B;AACA,WAAK2M,QAAL,CAAcI,aAAd,GAA8B,KAAKJ,QAAL,CAAcG,aAAd,GAA8B,KAAKH,QAAL,CAAcC,UAA1E;;AAEA,WAAK9E,MAAL,CAAYyH,MAAZ,GAAqB,KAAK5C,QAAL,CAAcI,aAAd,GAA8B,KAAKJ,QAAL,CAAcE,cAAjE;AACA,WAAKhF,QAAL,CAAcwF,OAAd,CAAsB,KAAKV,QAAL,CAAcI,aAApC,EAAmD,KAAKJ,QAAL,CAAcE,cAAjE,EAAiF,KAAjF;AACA,WAAK/E,MAAL,CAAYwG,sBAAZ;AACD;;;sCAEiB;AAChB,cAAQkB,MAAMC,KAAd;AACE,aAAKnO,SAASM,SAAd;AACE,eAAK8N,eAAL,GAAuB,KAAvB;AACA;AACF,aAAKpO,SAASQ,UAAd;AACE,eAAK6N,gBAAL,GAAwB,KAAxB;AACA;AACF,aAAKrO,SAASO,OAAd;AACE,eAAK+N,aAAL,GAAqB,KAArB;AACA;AACF,aAAKtO,SAASS,SAAd;AACE,eAAK8N,eAAL,GAAuB,KAAvB;AACA;AACF,aAAKvO,SAASW,KAAd;AACE,eAAK6N,WAAL,GAAmB,KAAnB;AACA;AACF,aAAKxO,SAASgD,CAAd;AACE,eAAKyL,OAAL,GAAe,KAAf;AACA;AACF,aAAKzO,SAAS0B,CAAd;AACE,eAAKgN,OAAL,GAAe,KAAf;AACA;AACF,aAAK1O,SAAS4C,CAAd;AACE,eAAK+L,OAAL,GAAe,KAAf;AACA;AACF,aAAK3O,SAAS6B,CAAd;AACE,eAAK+M,OAAL,GAAe,KAAf;AACA;AACF;AACE;AA7BJ;AA+BD;;;sCAEiBV,K,EAAO;;AAEvB,cAAQA,MAAMC,KAAd;AACE,aAAKnO,SAASM,SAAd;AACE,eAAK8N,eAAL,GAAuB,IAAvB;AACA;AACF,aAAKpO,SAASQ,UAAd;AACE,eAAK6N,gBAAL,GAAwB,IAAxB;AACA;AACF,aAAKrO,SAASO,OAAd;AACE,eAAK+N,aAAL,GAAqB,IAArB;AACA;AACF,aAAKtO,SAASS,SAAd;AACE,eAAK8N,eAAL,GAAuB,IAAvB;AACA;AACF,aAAKvO,SAASW,KAAd;AACE,eAAK6N,WAAL,GAAmB,IAAnB;AACA;AACF,aAAKxO,SAASgD,CAAd;AACE,eAAKyL,OAAL,GAAe,IAAf;AACA;AACF,aAAKzO,SAAS0B,CAAd;AACE,eAAKgN,OAAL,GAAe,IAAf;AACA;AACF,aAAK1O,SAAS4C,CAAd;AACE,eAAK+L,OAAL,GAAe,IAAf;AACA;AACF,aAAK3O,SAAS6B,CAAd;AACE,eAAK+M,OAAL,GAAe,IAAf;AACA;AACF;AACE;AA7BJ;AA+BD;;;6CAEwB;AACvB,UACE,KAAKR,eAAL,IACA,KAAKC,gBADL,IAEA,KAAKC,aAFL,IAGA,KAAKC,eAHL,IAIA,KAAKE,OAJL,IAKA,KAAKC,OALL,IAMA,KAAKC,OANL,IAOA,KAAKC,OARP,EASE;AACA,YAAIC,YAAY,KAAKrI,MAAL,CAAYd,QAA5B;;AAEA,YAAG,KAAK0I,eAAL,IAAwB,KAAKM,OAAhC,EAAyC;AACvCG,oBAAU5L,CAAV,IAAe/E,eAAe,GAA9B;AACD;AACD,YAAG,KAAKmQ,gBAAL,IAAyB,KAAKO,OAAjC,EAA0C;AACxCC,oBAAU5L,CAAV,IAAe/E,eAAe,GAA9B;AACD;AACD,YAAG,KAAKoQ,aAAL,IAAsB,KAAKG,OAA9B,EAAuC;AACrCI,oBAAU3L,CAAV,IAAehF,eAAe,GAA9B;AACD;AACD,YAAG,KAAKqQ,eAAL,IAAwB,KAAKI,OAAhC,EAAyC;AACvCE,oBAAU3L,CAAV,IAAehF,eAAe,GAA9B;AACD;;AAED,aAAKsI,MAAL,CAAYsI,MAAZ,CAAmBD,SAAnB;AACD;AACF;;;sCAEiBX,K,EAAO;AACvBA,YAAMa,cAAN;;AAEA,UAAGb,MAAMC,KAAN,IAAenO,SAASC,SAA3B,EAAsC;AAClC,aAAK0N,WAAL,GAAmB,KAAnB;;AAEA,YAAIqB,aAAa,KAAKC,oBAAL,EAAjB;AACA,YAAIjF,eAAJ;AACA,YAAIvB,iBAAJ;AACA,YAAIK,qBAAJ;;AAEA;AACA,aAAI,IAAI5G,CAAR,IAAa8M,UAAb,EAAyB;;AAEvB,cAAGA,WAAW9M,CAAX,EAAcqG,IAAd,IAAsB,UAAzB,EAAqC;AACnCE,uBAAWuG,WAAW9M,CAAX,CAAX;AACD;;AAED,cAAG8M,WAAW9M,CAAX,EAAcqG,IAAd,IAAsB,cAAzB,EAAyC;AACvCO,2BAAekG,WAAW9M,CAAX,CAAf;AACD;;AAED;AACA,cAAG8M,WAAW9M,CAAX,EAAcwF,MAAd,IAAwB,KAAKsC,MAAhC,EAAwC;AACtCA,qBAASgF,WAAW9M,CAAX,CAAT;AACD;AACF;;AAED,YAAG,CAAC,KAAKsM,WAAN,IAAqB,KAAKU,aAAL,CAAmBhB,KAAnB,CAAxB,EAAmD;;AAEjD,cAAGlE,MAAH,EAAW;AACP,iBAAK/F,wBAAL,GAAgC+F,OAAOmF,KAAvC;AACH;;AAED,cAAIC,uBAAuB,IAAI3S,MAAMiR,OAAV,CACzB,KAAKE,iBAAL,CAAuB3K,CAAvB,GAA2B,KAAKwK,KAAL,CAAWxK,CADb,EAEzB,KAAK2K,iBAAL,CAAuB1K,CAAvB,GAA2B,KAAKuK,KAAL,CAAWvK,CAFb,CAA3B;;AAKA,cACEsC,KAAK6J,GAAL,CAASD,qBAAqBnM,CAA9B,IAAmC,KAAKkB,oBAAxC,IACAqB,KAAK6J,GAAL,CAASD,qBAAqBlM,CAA9B,IAAmC,KAAKiB,oBAF1C,EAGC;;AAEC,iBAAKmL,gBAAL;;AAEA,gBAAG7G,QAAH,EAAa;AACX,mBAAK/D,aAAL,CAAmB4D,IAAnB,CAAwBG,QAAxB;AACD;;AAED,gBAAGK,YAAH,EAAiB;AACf,mBAAKpE,aAAL,CAAmB4D,IAAnB,CAAwBQ,YAAxB;AACD;AACF;AACF;;AAED,aAAK8E,iBAAL,CAAuB3K,CAAvB,GAA2B,KAAKwK,KAAL,CAAWxK,CAAtC;AACA,aAAK2K,iBAAL,CAAuB1K,CAAvB,GAA2B,KAAKuK,KAAL,CAAWvK,CAAtC;AACH,OAvDD,MAwDK,IAAIgL,MAAMC,KAAN,IAAenO,SAASE,UAA5B,EAAwC;AACzC,aAAKqP,gBAAL,GAAwB,KAAxB;;AAEA,YAAG,KAAK7K,aAAL,CAAmB0D,MAAnB,GAA4B,CAA/B,EAAkC;AAChC,eAAKoH,YAAL,CAAkB,QAAlB;AACD,SAFD,MAEO;AACL,eAAKA,YAAL,CAAkB,KAAKtL,SAAvB;AACD;AACJ;;AAED,WAAK0B,KAAL,CAAWgD,MAAX,CAAkB,KAAKuC,YAAvB;AACD;;;wCAEmB+C,K,EAAO;;AAEzBA,YAAMa,cAAN;;AAEA,UAAG,KAAKG,aAAL,CAAmBhB,KAAnB,CAAH,EAA8B;;AAE5B,YAAGA,MAAMC,KAAN,IAAenO,SAASC,SAA3B,EAAsC;AAClC,eAAK0N,WAAL,GAAmB,IAAnB;;AAEA,eAAKC,iBAAL,CAAuB3K,CAAvB,GAA2B,KAAKwK,KAAL,CAAWxK,CAAtC;AACA,eAAK2K,iBAAL,CAAuB1K,CAAvB,GAA2B,KAAKuK,KAAL,CAAWvK,CAAtC;;AAEA,cAAG,CAAC,KAAKsL,WAAT,EAAsB;AACpB,iBAAKzK,0BAAL,GAAkC,KAAK0L,mBAAL,CAAyB,KAAKzF,MAA9B,CAAlC;;AAEA,gBAAG,KAAKjG,0BAAL,KAAoC,IAAvC,EAA6C;AAC3C,mBAAKkB,eAAL;AACA,mBAAKkG,YAAL,CAAkBuE,gBAAlB,CAAmC,KAAK3L,0BAAxC;AACD;AACF;AACJ,SAdD,MAeK,IAAImK,MAAMC,KAAN,IAAenO,SAASE,UAA5B,EAAwC;AACzC,eAAKqP,gBAAL,GAAwB,IAAxB;AACH;AACF;AACF;;;0CAEqBrB,K,EAAO;AAC3BA,YAAMa,cAAN;AACD;;;wCAEmBb,K,EAAO;AACzBA,YAAMa,cAAN;;AAEA,WAAKtB,KAAL,CAAWxK,CAAX,GAAgBiL,MAAMyB,OAAN,GAAgBnR,OAAOoR,UAAxB,GAAsC,CAAtC,GAA0C,CAAzD;AACA,WAAKnC,KAAL,CAAWvK,CAAX,GAAe,EAAEgL,MAAM2B,OAAN,GAAgBrR,OAAOsR,WAAzB,IAAwC,CAAxC,GAA4C,CAA3D;;AAEA;AACA,UAAI,KAAKnC,WAAL,IAAoB,KAAKuB,aAAL,CAAmBhB,KAAnB,CAAxB,EAAmD;;AAEjD;AACA,YAAG,KAAKM,WAAR,EAAqB;;AAEnB;AACA,cAAIuB,SAAU,KAAKhC,iBAAL,CAAuB9K,CAAvB,GAA2BiL,MAAMyB,OAA/C;AAAA,cACIK,SAAU,KAAKjC,iBAAL,CAAuB7K,CAAvB,GAA2BgL,MAAM2B,OAD/C;;AAGA;AACA,cAAIhB,YAAY,IAAIpS,MAAMuH,OAAV,CACd,KAAKwC,MAAL,CAAYd,QAAZ,CAAqBzC,CAArB,GAA0B8M,SAAS,EADrB,EAEd,KAAKvJ,MAAL,CAAYd,QAAZ,CAAqBxC,CAArB,GAA0B8M,SAAS,EAFrB,EAGd,KAAKxJ,MAAL,CAAYd,QAAZ,CAAqBvC,CAHP,CAAhB;;AAMA,eAAKqD,MAAL,CAAYsI,MAAZ,CAAmBD,SAAnB;AACD,SAdD,MAcO;AACL;AACA,eAAK1D,YAAL,CAAkB8E,mBAAlB,CAAsC,KAAKR,mBAAL,CAAyB,KAAKzF,MAA9B,CAAtC;;AAEA;AACA,eAAKsF,gBAAL;AACA,eAAK5K,aAAL,GAAqB,KAAKyG,YAAL,CAAkB+E,aAAlB,EAArB;AACD;;AAED,aAAK1J,MAAL,CAAY2J,YAAZ;AACD;;AAED,WAAKpC,iBAAL,GAAyB,IAAItR,MAAMiR,OAAV,CACvBQ,MAAMyB,OADiB,EAEvBzB,MAAM2B,OAFiB,CAAzB;;AAKA,WAAKhC,SAAL,CAAeuC,aAAf,CAA6B,KAAK3C,KAAlC,EAAyC,KAAKjH,MAA9C;AACD;;;yCAEoB0H,K,EAAO;AAC1BA,YAAMa,cAAN;;AAEA;;;AAGA,UAAIsB,SAASnC,MAAMoC,WAAN,GAAkB,EAA/B;AACA,WAAK9J,MAAL,CAAYsI,MAAZ,CAAmB,IAAIrS,MAAMuH,OAAV,CAAkB,KAAKwC,MAAL,CAAYd,QAAZ,CAAqBzC,CAAvC,EAA0C,KAAKuD,MAAL,CAAYd,QAAZ,CAAqBxC,CAA/D,EAAkE,KAAKsD,MAAL,CAAYd,QAAZ,CAAqBvC,CAArB,GAAyBkN,MAA3F,CAAnB;AACD;;;wCAEmB3G,G,EAAK;AACvB;AACA,WAAKmE,SAAL,CAAeuC,aAAf,CAA6B,KAAK3C,KAAlC,EAAyC,KAAKjH,MAA9C;;AAEA;;;;AAIA;AACA,UAAIwI,aAAa,KAAKnB,SAAL,CAAe0C,gBAAf,CAAgC,KAAK3K,KAAL,CAAWiC,QAA3C,EAAqD,IAArD,CAAjB;;AAEA,WAAI,IAAI3F,CAAR,IAAa8M,UAAb,EAAyB;AACvB,YAAGA,WAAW9M,CAAX,EAAcwF,MAAd,IAAwBgC,GAA3B,EAAgC;AAC9B,iBAAOsF,WAAW9M,CAAX,EAAciN,KAArB;AACD;AACF;;AAED;AACA,aAAO,IAAP;AACD;;;uCAEkB;AACjB,WAAI,IAAIjN,CAAR,IAAa,KAAKwC,aAAlB,EAAiC;AAC/B,aAAKA,aAAL,CAAmBxC,CAAnB,EAAsB8D,MAAtB,CAA6B,KAA7B;AACD;AACD,WAAKtB,aAAL,GAAqB,EAArB;AACD;;;iCAEY8L,I,EAAM;AACjB,UAAIC,wBAAJ;AACA,cAAOD,IAAP;AACE,aAAK,kBAAL;AACE,cAAG,CAAC,KAAKhC,WAAT,EAAsB;AACpB;AACA,gBAAIkC,YAAY,CACd,OADc,EAEd,MAFc,EAGd,MAHc,CAAhB;AAKA,gBAAIC,aAAaD,UAAU,KAAKE,YAAL,CAAkB,CAAlB,EAAqBF,UAAUtI,MAAV,GAAmB,CAAxC,CAAV,CAAjB;;AAEA,iBAAK0B,eAAL,CACE,KAAK2F,mBAAL,CAAyB,KAAKzF,MAA9B,CADF,EAEE,IAAIvN,MAAMuH,OAAV,CAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,CAFF,EAGE2M,UAHF;AAKD;AACD;AACF,aAAK,oBAAL;AACE,cAAG,CAAC,KAAKnC,WAAT,EAAsB;AACpB;AACAiC,8BAAkB,KAAKhB,mBAAL,CAAyB,KAAKzF,MAA9B,CAAlB;;AAEA,gBAAGyG,eAAH,EAAoB;AAClB,mBAAKI,aAAL,CAAmB,CAAnB,IAAwBJ,eAAxB;AACD;;AAED,iBAAK3G,eAAL,CAAqBgH,KAArB,CAA2B,IAA3B,EAAiC,KAAKD,aAAtC;AACD;AACD;AACF,aAAK,QAAL;AACE;AACA,eAAKhD,SAAL,CAAeuC,aAAf,CAA6B,KAAK3C,KAAlC,EAAyC,KAAKjH,MAA9C;;AAEA;AACA;AACA,cAAIuD,UAAU,EAAd;AACAA,kBAAQzB,IAAR,CAAawI,KAAb,CAAmB/G,OAAnB,EAA4B,KAAKvF,SAAjC;AACAuF,kBAAQzB,IAAR,CAAawI,KAAb,CAAmB/G,OAAnB,EAA4B,KAAKtF,aAAjC;AACAsF,kBAAQzB,IAAR,CAAawI,KAAb,CAAmB/G,OAAnB,EAA4B,KAAKxF,KAAjC;AACAwF,kBAAQzB,IAAR,CAAayI,IAAb,CAAkBhH,OAAlB,EAA2B,KAAKC,MAAhC;;AAEA,cAAIgH,cAAc,KAAK/B,oBAAL,CAA0BlF,OAA1B,EAAmC,IAAnC,CAAlB;;AAEA;AACA,eAAI,IAAI7H,CAAR,IAAa8O,WAAb,EAA0B;;AAExB,gBAAIC,cAAcD,YAAY9O,CAAZ,EAAegP,MAAf,CAAsB,KAAKxM,aAA3B,EAA0CsM,YAAY9O,CAAZ,EAAeiN,KAAzD,CAAlB;;AAEA;;;;AAIA,gBAAG8B,WAAH,EAAgB;AACd;AACA;AACD,aAAC;AACA;AACD;AACF;;AAED;AACF,aAAK,YAAL;;AAEE;AACAR,4BAAkB,KAAKhB,mBAAL,CAAyB,KAAKzF,MAA9B,CAAlB;;AAEA,cAAGyG,eAAH,EAAoB;AAClB,iBAAKI,aAAL,CAAmB,CAAnB,IAAwBJ,eAAxB;AACD;;AAED;AACA,eAAKtH,OAAL,CAAa2H,KAAb,CAAmB,IAAnB,EAAyB,KAAKD,aAA9B;;AAEA;AACF,aAAK,gBAAL;AACE;AACAJ,4BAAkB,KAAK5C,SAAL,CAAe0C,gBAAf,CAAgC,CAAC,KAAKvG,MAAN,CAAhC,EAA+C,CAA/C,CAAlB;;AAEA,cAAGyG,eAAH,EAAoB;AAClB,iBAAK5G,WAAL,CACE4G,gBAAgBtB,KADlB,EAEEhH,SAFF,EAGEA,SAHF,EAIE,MAJF,EAKE,UALF;AAOD;AACD;AACF,aAAK,eAAL;AACE;AACAsI,4BAAkB,KAAK5C,SAAL,CAAe0C,gBAAf,CAAgC,CAAC,KAAKvG,MAAN,CAAhC,EAA+C,CAA/C,CAAlB;;AAEA,cAAGyG,eAAH,EAAoB;AAClB,iBAAK5G,WAAL,CACE4G,gBAAgBtB,KADlB,EAEEhH,SAFF,EAGEA,SAHF,EAIE,MAJF,EAKE,YALF;AAOD;AACD;AACF;AACER,kBAAQe,KAAR,CAAc,uBAAd;AACA;AAzGJ;AA2GD;;;kCAEawF,K,EAAO;AACnB,UAAGA,MAAMX,MAAN,IAAgB5Q,MAAnB,EAA2B;AACzB,eAAO,IAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;;;yCAEoBoN,O,EAASoH,S,EAAW;AACvC,UAAGpH,YAAY5B,SAAf,EAA0B;AACxB4B,kBAAU,KAAKnE,KAAL,CAAWiC,QAArB;AACD;AACD,UAAGsJ,cAAchJ,SAAjB,EAA4B;AAC1BgJ,oBAAY,IAAZ;AACD;;AAED;AACA,WAAKtD,SAAL,CAAeuC,aAAf,CAA6B,KAAK3C,KAAlC,EAAyC,KAAKjH,MAA9C;;AAEA;AACA,UAAIwI,aAAa,KAAKnB,SAAL,CAAe0C,gBAAf,CAAgCxG,OAAhC,EAAyCoH,SAAzC,CAAjB;;AAEA,UAAIH,cAAc,EAAlB;;AAEA,WAAI,IAAI9O,CAAR,IAAa8M,UAAb,EAAyB;AACvB,YAAItF,MAAMsF,WAAW9M,CAAX,EAAcwF,MAAxB;AACA,eAAMgC,IAAI0H,MAAJ,KAAe,IAArB,EAA2B;AACzB;AACA,cAAG1H,IAAI0H,MAAJ,IAAc,KAAKxL,KAAtB,EAA6B;AAC3B;AACA,gBAAGoL,YAAYK,OAAZ,CAAoB3H,GAApB,MAA6B,CAAC,CAAjC,EAAoC;AAChCA,kBAAIyF,KAAJ,GAAYH,WAAW9M,CAAX,EAAciN,KAA1B;AACA6B,0BAAY1I,IAAZ,CAAiBoB,GAAjB;AACH;AACD;AACD,WAPD,MAOO;AACLA,kBAAMA,IAAI0H,MAAV;AACD;AACF;AACF;;AAED,aAAOJ,WAAP;AACD;;;iCAEY;AACX,WAAKrM,MAAL,CAAYgC,KAAZ,GAAoB,CAApB;AACD;;;qCAEgB;AACf,WAAI,IAAIzE,CAAR,IAAa,KAAKyC,MAAL,CAAYC,SAAzB,EAAoC;AAClC,aAAKD,MAAL,CAAYC,SAAZ,CAAsB1C,CAAtB,IAA2B,CAA3B;AACD;AACF;;;iCAEYsO,I,EAAMc,I,EAAM;AACvB,WAAKpN,SAAL,GAAiBsM,IAAjB;;AAEA,UAAGc,SAASnJ,SAAZ,EAAuB;AACnB,aAAK0I,aAAL,GAAqBS,IAArB;AACH,OAFD,MAEO;AACL,aAAKT,aAAL,GAAqB,EAArB;AACD;AACF;;;iCAEYU,G,EAAKC,G,EAAK;AACrB,aAAOhM,KAAKiM,KAAL,CAAWjM,KAAK0D,MAAL,MAAiBsI,MAAMD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD;;;;;;AAGLG,OAAOC,OAAP,GAAiBrO,IAAjB","file":"Game.js","sourcesContent":["/*\njshint\nnode: true,\nesversion: 6,\nbrowser: true\n*/\n'use strict';\n\nconst THREE = require('three');\n\nconst CANVAS = document.getElementById('game');\nconst CONTAINER = document.getElementById('container');\nconst MENU = document.getElementById('leftMenu');\nconst SCREEN_WIDTH = CANVAS.width;\nconst SCREEN_HEIGHT = CANVAS.height;\nconst ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT;\n\n/* Game Settings */\nconst MAPWIDTH = 10000;\nconst MAPLENGTH = 10000;\nconst MAPHEIGHT = 1000;\nconst SHADOWS = true;\nconst LEVEL = require('../../game/assets/scenario1.json');\nconst MAP = 'build/output/assets/map.png';\n\n/* Camera Settings */\nconst FOV = 90;\nconst MAXFRAMERATE = 1000 / 60;\nconst NEARFRUSTRAM = 0.1;\nconst FAFRUSTRAM = 10000;\nconst CAMERA_START_X = 4000;\nconst CAMERA_START_Y = 4000;\nconst CAMERA_START_Z = 3500;\nconst SCROLL_SCALE = 1;\n\n/* Interface Settings */\nconst MAXZOOM = 3500;\nconst MINZOOM = 1000;\nconst MOUSEDRAGSENSITIVITY = 0.005;\nconst MENU_WIDTH = parseInt(window.getComputedStyle(MENU, null).getPropertyValue('width'));\n\n/* Import Objects */\nconst ColladaLoader = require('./objects/ColladaLoader.js');\nconst Model = require('./objects/Model.js');\nconst Player = require('./objects/Player.js');\nconst Camera = require('./objects/Camera.js');\nconst Menu = require('./objects/Menu/Menu.js');\nconst LeftMenu = require('./objects/Menu/LeftMenu.js');\nconst RightMenu = require('./objects/Menu/RightMenu.js');\nconst SceneObject = require('./objects/SceneObject.js');\nconst InterfaceObject = require('./objects/InterfaceObject/InterfaceObject.js');\nconst SelectionBox = require('./objects/InterfaceObject/SelectionBox.js');\nconst Ground = require('./objects/Ground.js');\nconst Cube = require('./objects/Cube.js');\nconst WorkerUnit = require('./objects/Units/Worker.js');\nconst Building = require('./objects/Building/Building.js');\nconst Mine = require('./objects/Building/Mine.js');\nconst Colony = require('./objects/Building/Colony.js');\nconst Base = require('./objects/Building/Base.js');\nconst ResourceNode = require('./objects/ResourceNode/ResourceNode.js');\nconst MetalResourceNode = require('./objects/ResourceNode/MetalResourceNode.js');\nconst GoldResourceNode = require('./objects/ResourceNode/GoldResourceNode.js');\nconst FoodResourceNode = require('./objects/ResourceNode/FoodResourceNode.js');\n\nconst CONTROLS = {\n  leftClick: 1,\n  rightClick: 3,\n  backspace: 8,\n  tab: 9,\n  space: 32,\n  leftArrow: 37,\n  upArrow: 38,\n  rightArrow: 39,\n  downArrow: 40,\n  enter: 13,\n  shift: 16,\n  ctrl: 17,\n  alt: 18,\n  capsLock: 20, // turning on only\n  delete: 46,\n  num0: 48,\n  num1: 49,\n  num2: 50,\n  num3: 51,\n  num4: 52,\n  num5: 53,\n  num6: 54,\n  num7: 55,\n  num8: 56,\n  num9: 57,\n  a: 65,\n  b: 66,\n  c: 67,\n  d: 68,\n  e: 69,\n  f: 70,\n  g: 71,\n  h: 72,\n  i: 73,\n  j: 74,\n  k: 75,\n  l: 76,\n  m: 77,\n  n: 78,\n  o: 79,\n  p: 80,\n  q: 81,\n  r: 82,\n  s: 83,\n  t: 84,\n  u: 85,\n  v: 86,\n  w: 87,\n  x: 88,\n  y: 89,\n  z: 90,\n  leftApple: 91,\n  rightApple: 92\n};\n\nclass Game{\n    constructor() {\n      this.initializeRenderer();\n      this.initializeScene();\n      this.initializeCamera();\n      this.initializeLight();\n      this.initializeMouse();\n      this.onWindowResize();\n\n      this.theta = 45;\n      this.phi = 60;\n      this.worldMouseCoordinatesStart = new THREE.Vector3(0, 0, 0);\n      this.worldMouseCoordinatesEnd = new THREE.Vector3(0, 0, 0);\n\n      this.rightTool = 'createRandomNode';\n\n      this.mouseDragSensitivity = MOUSEDRAGSENSITIVITY;\n\n      this.loader = new THREE.ColladaLoader();\n      this.textureLoader = new THREE.TextureLoader();\n\n      this.cubes = [];\n      this.buildings = [];\n      this.resourceNodes = [];\n\n      this.selectedUnits = [];\n\n      this.player = new Player();\n      this.player.resources.metal = 2000;\n      this.player.resources.food = 2000;\n      this.player.resources.gold = 2000;\n\n      this.loadMap(MAP);\n\n      this.addSelectionBox();\n\n      this.addMenu();\n\n      this.watchEvents();\n\n      this.loadScenario(LEVEL);\n\n      // add grid\n      this.grid = new THREE.GridHelper(1000, 10);\n      this.grid.rotation.x = Math.PI / 2;\n      this.grid.position.set(0, 0, 0);\n      this.scene.add(this.grid);\n    }\n\n    update() {\n        this.renderScore();\n        this.renderRightMenu();\n\n        for(let i in this.selectedUnits) {\n          this.selectedUnits[i].select(true);\n        }\n\n        for(let i in this.cubes) {\n          this.cubes[i].update();\n        }\n\n        for(let i in this.resourceNodes) {\n          this.resourceNodes[i].update();\n        }\n\n        for(let i in this.buildings) {\n          this.buildings[i].update();\n        }\n    }\n\n    render() {\n      // limit animation request to FRAMERATE\n      setTimeout(() => {\n        let that = this;\n        requestAnimationFrame(() => {\n          that.render();\n        });\n      }, MAXFRAMERATE);\n\n      // perform game updates\n      this.update();\n      // move camera according to keyboard controls\n      this.keyboardCameraControls();\n      this.renderer.render(this.scene, this.camera);\n    }\n\n    renderScore() {\n      this.leftMenu.updateScore(this.player.score);\n      this.leftMenu.updateGold(this.player.resources.gold);\n      this.leftMenu.updateFood(this.player.resources.food);\n      this.leftMenu.updateMetal(this.player.resources.metal);\n    }\n\n    renderRightMenu() {\n      this.rightMenu.render();\n    }\n\n    watchEvents() {\n      // keyboard controls\n      document.addEventListener('keydown', this.onDocumentKeyDown.bind(this), false);\n      document.addEventListener('keyup', this.onDocumentKeyUp.bind(this), false);\n\n      // mouse controls\n    \tdocument.addEventListener('mousemove', this.onDocumentMouseMove.bind(this), false );\n    \tdocument.addEventListener('mousedown', this.onDocumentMouseDown.bind(this), false );\n      document.addEventListener('contextmenu', this.onDocumentContextMenu.bind(this), false);\n    \tdocument.addEventListener('mouseup', this.onDocumentMouseUp.bind(this), false );\n      document.addEventListener('mousewheel', this.onDocumentMouseWheel.bind(this), false );\n\n      // resize window\n      window.addEventListener('resize', this.onWindowResize.bind(this), false);\n    }\n\n    listObjectsInScene() {\n      this.scene.traverse((object) => {\n        console.log(object);\n      });\n    }\n\n    listObjectLocationsInScene() {\n      for(let i in this.scene.children) {\n        let unit = this.scene.children[i];\n        console.log(unit.name);\n        console.log(unit.position);\n      }\n    }\n\n    /*\n      @coordinates: (x, y, z) vector\n      @size: (x, y, z) vector\n    */\n    addCube(coordinates, size, name) {\n      if(coordinates !== null) {\n        let cube = new Cube(\n          this,     // game\n          size,\n          undefined // model\n        );\n\n        // automatically get unique name\n        if(name === undefined) {\n          if(this.cubes.length > 0) {\n            // get name of last cube in array\n            name = `cube` + (parseInt(this.cubes[this.cubes.length - 1].name.match(/\\d+/)) + 1);\n          } else {\n            name = `cube0`;\n          }\n        }\n\n        cube.name = name;\n        cube.position.set(coordinates.x, coordinates.y, coordinates.z);\n\n        this.scene.add(cube);\n        this.cubes.push(cube);\n\n        return(cube);\n      } else {\n        // do nothing; invalid location\n      }\n    }\n\n    addBuilding(coordinates, size, name, type, status) {\n\n      if(name === undefined) {\n        name = `building${this.cubes.length}`;\n      }\n\n      if(status === undefined) {\n        status = 'incomplete';\n      }\n\n      let building;\n      switch(type) {\n        case 'mine':\n          building = new Mine(\n            this,\n            size,\n            type,\n            status\n          );\n          break;\n        case 'colony':\n          building = new Colony(\n            this,\n            size,\n            type,\n            status\n          );\n          break;\n        case 'base':\n          building = new Base(\n            this,\n            size,\n            type,\n            status\n          );\n          break;\n        default:\n          console.error(`unrecognized building type ${type}`);\n          return;\n      }\n\n      building.name = name;\n      building.position.set(coordinates.x, coordinates.y, coordinates.z);\n\n      this.buildings.push(building);\n    }\n\n    removeBuilding(building) {\n      if(building.name === undefined) {\n        building = this.scene.getObjectByName(building);\n      }\n      // remove from this.scene\n      this.scene.remove(building);\n\n      // remove from this.buildings\n      for(let i in this.buildings) {\n        if(this.buildings[i] == building) {\n          this.buildings.splice(i, 1);\n        }\n      }\n    }\n\n    removeResourceNode(resourceNode) {\n\n      // remove from this.scene\n      this.scene.remove(resourceNode);\n\n      // remove from this.resourceNode\n      for(let i in this.resourceNodes) {\n        if(this.resourceNodes[i] == resourceNode) {\n          this.resourceNodes.splice(i, 1);\n        }\n      }\n    }\n\n    removeAllBuildings() {\n      let numDeleted = 0;\n      for(let i = this.cubes.length - 1; i >= 0; i--) {\n        this.removeBuilding(this.buildings[i]);\n      }\n    }\n\n    /*\n      @coordinates: (x, y, z) vector\n      @size: (x, y, z) vector\n      @type: i.e. 'metal'\n    */\n    addResourceNode(coordinates, size, type) {\n      if(coordinates !== null) {\n        let resourceNode;\n\n        switch(type) {\n          case \"metal\":\n            resourceNode = new MetalResourceNode(\n              this,\n              undefined, // size\n              1000 // resourceLeft\n            );\n            break;\n          case \"food\":\n            resourceNode = new FoodResourceNode(\n              this,\n              undefined, // size\n              1000 // resourceLeft\n            );\n            break;\n          case \"gold\":\n            resourceNode = new GoldResourceNode(\n              this,\n              undefined, // size\n              1000 // resourceLeft\n            );\n            break;\n          default:\n            console.error('invalid resourceNode type');\n            break;\n        }\n\n        let name = `resourceNode${this.resourceNodes.length}`;\n\n        resourceNode.name = name;\n        resourceNode.position.set(coordinates.x, coordinates.y, coordinates.z);\n\n        this.scene.add(resourceNode);\n        this.resourceNodes.push(resourceNode);\n      }\n    }\n\n    /*\n      Adds 100 randomly sized cubes in random places\n    */\n    addRandomCubes(number) {\n      for(let i = 0; i < number; i++) {\n        let random = Math.random();\n        let width = random * 100;\n        let length = random * 100;\n        let height = random * 100;\n        let size = new THREE.Vector3(width, length, height);\n        let coordinates = new THREE.Vector3(Math.random() * MAPWIDTH, Math.random() * MAPLENGTH, random * 50);\n        let name = `cube${this.cubes.length}`;\n\n        this.addCube(coordinates, size, name);\n      }\n    }\n\n    removeAllCubes() {\n      let numDeleted = 0;\n      let numCubes = this.cubes.length;\n      for(let i =0; i < numCubes; i++) {\n        this.removeCube(this.cubes[0]);\n        numDeleted++;\n      }\n    }\n\n    removeSelected() {\n      // could down to avoid skipping nodes\n      for(let i = this.selectedUnits.length - 1; i >= 0; i-- ) {\n        switch(this.selectedUnits[i].type) {\n          case 'building':\n            this.removeBuilding(this.selectedUnits[i]);\n            break;\n          case 'cube':\n            this.removeCube(this.selectedUnits[i]);\n            break;\n          case 'resourceNode':\n            this.removeResourceNode(this.selectedUnits[i]);\n            break;\n          default:\n            console.error(`unknown unit type ${this.selectedUnits[i].type} when trying to removeSelected()`);\n        }\n        this.removeCube(this.selectedUnits[i]);\n      }\n    }\n\n    listAllCubes() {\n      for(let i in this.cubes) {\n        console.log(this.cubes[i]);\n      }\n    }\n\n    listAllBuildings() {\n      for(let i in this.buildings) {\n        console.log(this.buildings[i]);\n      }\n    }\n\n    listSelectedUnits() {\n      console.log(this.selectedUnits);\n    }\n\n    listNearbyToSelectedUnits() {\n      for(let i in this.selectedUnits) {\n        console.log(this.selectedUnits[i].getClosebyUnits());\n      }\n    }\n\n    loadScenario(jsonFile) {\n      this.scenario = jsonFile;\n\n      for(let i in this.scenario) {\n        let obj = this.scenario[i];\n        let coords;\n        let size;\n        let name;\n        let type;\n\n        switch(obj.type) {\n          case 'cube':\n            coords = obj.data.coordinates;\n            size = obj.data.size;\n            name = obj.data.name;\n\n            this.addCube(coords, size, name);\n            break;\n          case 'building':\n\n            this.addBuilding(\n              obj.data.coordinates,\n              obj.data.size,\n              obj.data.name,\n              obj.data.type,\n              obj.data.status\n            );\n            break;\n          case 'resourceNode':\n            coords = obj.data.coordinates;\n            size = obj.data.size;\n            type = obj.data.type;\n\n            this.addResourceNode(coords, size, type);\n            break;\n          default:\n            console.error(`Error reading scenario file: unrecognized node type ${obj.type}`);\n            break;\n        }\n      }\n    }\n\n    snapUpToGround(objects) {\n\n      for(let i in objects) {\n        let height = this.ground.getHeight(objects[i].position.x, objects[i].position.y);\n\n        if(objects[i].position.z < height) {\n          objects[i].position.z = height;\n        }\n      }\n    }\n\n    /*\n      Loads image from @map, instantiates this.ground and applies the heightMap\n    */\n    loadMap(map) {\n\n      // need a canvas to getImageData()\n      let canvas = window.document.createElement('canvas');\n      let context = canvas.getContext('2d');\n\n      let img = new Image();\n\n      // assign async callback to do work on the image\n      img.onload = (e) => {\n\n        canvas.width = img.width;\n        canvas.height = img.height;\n\n        // copy image data pixel-by-pixel onto canvas\n        context.drawImage(img, 0, 0);\n\n        // returns an array in RGBA order\n        let imgd = context.getImageData(0, 0, img.width, img.height);\n\n        // array of heights, where (0, 0) is top left and iterates collumn-major\n        let mapData = [];\n\n        // parse image RGBA data into data array\n        for(let i = 0; i < imgd.data.length; i += 4) {\n          let r = imgd.data[i];\n          let g = imgd.data[i+1];\n          let b = imgd.data[i+2];\n          let a = imgd.data[i+3];\n\n          let d = (r + b + g) / 3;\n\n          mapData.push(d);\n        }\n\n        this.ground = new Ground(this, MAPWIDTH, MAPLENGTH, mapData);\n\n        this.snapUpToGround([].concat(\n          this.cubes,\n          this.buildings,\n          this.resourceNodes\n        ));\n      };\n\n      img.src = map;\n    }\n\n    addMenu() {\n      this.leftMenu = new LeftMenu(this);\n      this.rightMenu = new RightMenu(this);\n    }\n\n    addUnit(coords) {\n      if(!coords) {\n        coords = new THREE.Vector3(\n          Math.random() * MAPWIDTH, Math.random() * MAPLENGTH, 25\n        );\n      }\n\n      this.addCube(coords);\n    }\n\n    /*\n      Send @unit queue job to @building\n    */\n    queueUnit(unit, building) {\n      building = this.scene.getObjectByName(building);\n      building.queueUnit(unit);\n    }\n\n    removeCube(sceneObject) {\n      // remove from this.scene\n      this.scene.remove(sceneObject);\n\n      // remove from this.cubes\n      for(let i in this.cubes) {\n        if(this.cubes[i] == sceneObject) {\n          this.cubes.splice(i, 1);\n        }\n      }\n\n      // remove from this.selectedUnits\n      for(let i in this.selectedUnits) {\n        if(this.selectedUnits[i] == sceneObject) {\n          this.selectedUnits.splice(i, 1);\n        }\n      }\n    }\n\n    addSelectionBox() {\n      this.selectionBox = new SelectionBox();\n      this.scene.add(this.selectionBox);\n      this.selectionBox.setSceneObject(this.scene.getObjectByName('selectionBox'));\n    }\n\n    removeSelectionBox() {\n      this.scene.remove(this.selectionBox);\n      this.selectionBox = null;\n    }\n\n    initializeRenderer() {\n      this.gameElem = window.getComputedStyle(CANVAS, null);\n      this.gameElem.offsetLeft = parseInt(this.gameElem.getPropertyValue('margin-left'));\n      this.gameElem.detectedHeight = parseInt(this.gameElem.getPropertyValue('height'));\n      this.gameElem.detectedWidth = parseInt(this.gameElem.getPropertyValue('width'));\n      this.gameElem.computedWidth = this.gameElem.detectedWidth - this.gameElem.offsetLeft;\n\n      // renderer\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        canvas: CANVAS\n      });\n      this.renderer.setClearColor(0x000000);\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(this.gameElem.computedWidth, this.gameElem.detectedHeight, false);\n\n      // shadows\n      this.renderer.shadowMap.enabled = true;\n      this.renderer.shadowMap.type = THREE.PCFShadowMap;\n      this.renderer.shadowMapSoft = true; // false for better performance\n\n      this.renderer.shadowCameraNear = 3;\n      this.renderer.shadowCameraFar = 10000;\n      this.renderer.shadowCameraFov = 50;\n\n      this.renderer.shadowMapBias = 0.0039;\n      this.renderer.shadowMapDarkness = 0.5;\n      this.renderer.shadowMapWidth = MAPWIDTH;\n      this.renderer.shadowMapHeight = MAPLENGTH;\n    }\n\n    initializeScene() {\n      this.scene = new THREE.Scene();\n    }\n\n    initializeCamera() {\n      this.camera = new Camera(FOV, ASPECT, NEARFRUSTRAM, FAFRUSTRAM, CAMERA_START_X, CAMERA_START_Y, CAMERA_START_Z, MAPWIDTH, MAPLENGTH, MAXZOOM, MINZOOM);\n\n      this.camera.lookAt(new THREE.Vector3(MAPWIDTH / 2, MAPLENGTH / 2, 0));\n\n      this.camera.rotation.x = -Math.cos(Math.PI * 0.55);\n      this.camera.rotation.y = 0;\n      this.camera.rotation.z = 0;\n\n      this.cameraHelper = new THREE.CameraHelper(this.camera);\n      this.camera.updateProjectionMatrix();\n    }\n\n    initializeLight() {\n\n      this.ambientLight = new THREE.AmbientLight(0xaaaaaa);\n\n      this.light = new THREE.DirectionalLight(0xffffff, 1);\n\n      this.lightTarget = new THREE.Object3D();\n      this.lightTarget.position.set(\n        MAPWIDTH / 2,\n        MAPLENGTH / 2,\n        0\n      );\n      this.scene.add(this.lightTarget);\n      this.light.target = this.lightTarget;\n      this.light.castShadow = true;\n      this.light.position.set(0, 0, 2000);\n\n      this.scene.add(this.ambientLight);\n      this.scene.add(this.light);\n    }\n\n    initializeMouse() {\n      this.mouse = new THREE.Vector2();\n      this.isMouseDown = false;\n      this.mouseDownPosition = new THREE.Vector2();\n      this.raycaster = new THREE.Raycaster();\n\n      this.lastMousePosition = new THREE.Vector2();\n\n      this.leftTool = 'select';\n      this.rightTool = 'createNode';\n    }\n\n    getPlayer() {\n      return this.player;\n    }\n\n    onWindowResize() {\n      this.gameElem.offsetLeft = parseInt(this.gameElem.getPropertyValue('margin-left'));\n      this.gameElem.detectedHeight = parseInt(this.gameElem.getPropertyValue('height'));\n      this.gameElem.detectedWidth = parseInt(this.gameElem.getPropertyValue('width'));\n      this.gameElem.computedWidth = this.gameElem.detectedWidth - this.gameElem.offsetLeft;\n\n      this.camera.aspect = this.gameElem.computedWidth / this.gameElem.detectedHeight;\n      this.renderer.setSize(this.gameElem.computedWidth, this.gameElem.detectedHeight, false);\n      this.camera.updateProjectionMatrix();\n    }\n\n    onDocumentKeyUp() {\n      switch (event.which) {\n        case CONTROLS.leftArrow:\n          this.leftArrowIsDown = false;\n          break;\n        case CONTROLS.rightArrow:\n          this.rightArrowIsDown = false;\n          break;\n        case CONTROLS.upArrow:\n          this.upArrowIsDown = false;\n          break;\n        case CONTROLS.downArrow:\n          this.downArrowIsDown = false;\n          break;\n        case CONTROLS.shift:\n          this.shiftIsDown = false;\n          break;\n        case CONTROLS.w:\n          this.wIsDown = false;\n          break;\n        case CONTROLS.a:\n          this.aIsDown = false;\n          break;\n        case CONTROLS.s:\n          this.sIsDown = false;\n          break;\n        case CONTROLS.d:\n          this.dIsDown = false;\n          break;\n        default:\n          break;\n      }\n    }\n\n    onDocumentKeyDown(event) {\n\n      switch (event.which) {\n        case CONTROLS.leftArrow:\n          this.leftArrowIsDown = true;\n          break;\n        case CONTROLS.rightArrow:\n          this.rightArrowIsDown = true;\n          break;\n        case CONTROLS.upArrow:\n          this.upArrowIsDown = true;\n          break;\n        case CONTROLS.downArrow:\n          this.downArrowIsDown = true;\n          break;\n        case CONTROLS.shift:\n          this.shiftIsDown = true;\n          break;\n        case CONTROLS.w:\n          this.wIsDown = true;\n          break;\n        case CONTROLS.a:\n          this.aIsDown = true;\n          break;\n        case CONTROLS.s:\n          this.sIsDown = true;\n          break;\n        case CONTROLS.d:\n          this.dIsDown = true;\n          break;\n        default:\n          break;\n      }\n    }\n\n    keyboardCameraControls() {\n      if(\n        this.leftArrowIsDown ||\n        this.rightArrowIsDown ||\n        this.upArrowIsDown ||\n        this.downArrowIsDown ||\n        this.wIsDown ||\n        this.aIsDown ||\n        this.sIsDown ||\n        this.dIsDown\n      ) {\n        let newCoords = this.camera.position;\n\n        if(this.leftArrowIsDown || this.aIsDown) {\n          newCoords.x -= SCROLL_SCALE * 100;\n        }\n        if(this.rightArrowIsDown || this.dIsDown) {\n          newCoords.x += SCROLL_SCALE * 100;\n        }\n        if(this.upArrowIsDown || this.wIsDown) {\n          newCoords.y += SCROLL_SCALE * 100;\n        }\n        if(this.downArrowIsDown || this.sIsDown) {\n          newCoords.y -= SCROLL_SCALE * 100;\n        }\n\n        this.camera.moveTo(newCoords);\n      }\n    }\n\n    onDocumentMouseUp(event) {\n      event.preventDefault();\n\n      if(event.which == CONTROLS.leftClick) {\n          this.isMouseDown = false;\n\n          let intersects = this.getObjectsUnderMouse();\n          let ground;\n          let building;\n          let resourceNode;\n\n          // iterate over all objects under mouse\n          for(let i in intersects) {\n\n            if(intersects[i].type == 'building') {\n              building = intersects[i];\n            }\n\n            if(intersects[i].type == 'resourceNode') {\n              resourceNode = intersects[i];\n            }\n\n            // cache ground for later reference\n            if(intersects[i].object == this.ground) {\n              ground = intersects[i];\n            }\n          }\n\n          if(!this.shiftIsDown && this.mouseIsOnGame(event)) {\n\n            if(ground) {\n                this.worldMouseCoordinatesEnd = ground.point;\n            }\n\n            let mouseChangeSinceDown = new THREE.Vector2(\n              this.mouseDownPosition.x - this.mouse.x,\n              this.mouseDownPosition.y - this.mouse.y\n            );\n\n            if(\n              Math.abs(mouseChangeSinceDown.x) < this.mouseDragSensitivity &&\n              Math.abs(mouseChangeSinceDown.y) < this.mouseDragSensitivity\n            ){\n\n              this.deselectAllUnits();\n\n              if(building) {\n                this.selectedUnits.push(building);\n              }\n\n              if(resourceNode) {\n                this.selectedUnits.push(resourceNode);\n              }\n            }\n          }\n\n          this.mouseDownPosition.x = this.mouse.x;\n          this.mouseDownPosition.y = this.mouse.y;\n      }\n      else if (event.which == CONTROLS.rightClick) {\n          this.isRightMouseDown = false;\n\n          if(this.selectedUnits.length > 0) {\n            this.useRightTool('assign');\n          } else {\n            this.useRightTool(this.rightTool);\n          }\n      }\n\n      this.scene.remove(this.selectionBox);\n    }\n\n    onDocumentMouseDown(event) {\n\n      event.preventDefault();\n\n      if(this.mouseIsOnGame(event)) {\n\n        if(event.which == CONTROLS.leftClick) {\n            this.isMouseDown = true;\n\n            this.mouseDownPosition.x = this.mouse.x;\n            this.mouseDownPosition.y = this.mouse.y;\n\n            if(!this.shiftIsDown) {\n              this.worldMouseCoordinatesStart = this.mouseIntersectPoint(this.ground);\n\n              if(this.worldMouseCoordinatesStart !== null) {\n                this.addSelectionBox();\n                this.selectionBox.startCoordinates(this.worldMouseCoordinatesStart);\n              }\n            }\n        }\n        else if (event.which == CONTROLS.rightClick) {\n            this.isRightMouseDown = true;\n        }\n      }\n    }\n\n    onDocumentContextMenu(event) {\n      event.preventDefault();\n    }\n\n    onDocumentMouseMove(event) {\n      event.preventDefault();\n\n      this.mouse.x = (event.offsetX / window.innerWidth) * 2 - 1;\n      this.mouse.y = -(event.offsetY / window.innerHeight) * 2 + 1;\n\n      // click down\n      if (this.isMouseDown && this.mouseIsOnGame(event)) {\n\n        // move camera along X-Y axis if shift held\n        if(this.shiftIsDown) {\n\n          // calculate movement since first clicked\n          let deltaX = (this.lastMousePosition.x - event.offsetX),\n              deltaY = (this.lastMousePosition.y - event.offsetY);\n\n          // move camera along X-Y plane accordingly\n          let newCoords = new THREE.Vector3(\n            this.camera.position.x + (deltaX * 10),\n            this.camera.position.y - (deltaY * 10),\n            this.camera.position.z\n          );\n\n          this.camera.moveTo(newCoords);\n        } else {\n          // send mouse coordinates to selectionBox\n          this.selectionBox.continueCoordinates(this.mouseIntersectPoint(this.ground));\n\n          // set this.selectedUnits to those in selectionBox\n          this.deselectAllUnits();\n          this.selectedUnits = this.selectionBox.getCubesInBox();\n        }\n\n        this.camera.updateMatrix();\n      }\n\n      this.lastMousePosition = new THREE.Vector2(\n        event.offsetX,\n        event.offsetY\n      );\n\n      this.raycaster.setFromCamera(this.mouse, this.camera);\n    }\n\n    onDocumentMouseWheel(event) {\n      event.preventDefault();\n\n      /*\n        Scrolling up/down zooms camera\n      */\n      let deltaZ = event.wheelDeltaY/10;\n      this.camera.moveTo(new THREE.Vector3(this.camera.position.x, this.camera.position.y, this.camera.position.z - deltaZ));\n    }\n\n    mouseIntersectPoint(obj) {\n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.mouse, this.camera);\n\n      /*\n        TODO: arg to intersectObjects should just be obj.\n      */\n\n      // calculate objects intersecting the picking ray\n      let intersects = this.raycaster.intersectObjects(this.scene.children, true);\n\n      for(let i in intersects) {\n        if(intersects[i].object == obj) {\n          return intersects[i].point;\n        }\n      }\n\n      // if mouse ray doesn't intersect anything, return null\n      return null;\n    }\n\n    deselectAllUnits() {\n      for(let i in this.selectedUnits) {\n        this.selectedUnits[i].select(false);\n      }\n      this.selectedUnits = [];\n    }\n\n    useRightTool(tool) {\n      let groundIntersect;\n      switch(tool) {\n        case 'createRandomNode':\n          if(!this.shiftIsDown) {\n            // get intersecting point with ground & add a random resourceNode there\n            let nodeTypes = [\n              'metal',\n              'gold',\n              'food'\n            ];\n            let nodeToMake = nodeTypes[this.getRandomInt(0, nodeTypes.length - 1)];\n\n            this.addResourceNode(\n              this.mouseIntersectPoint(this.ground),\n              new THREE.Vector3(50, 50, 10),\n              nodeToMake\n            );\n          }\n          break;\n        case 'createResourceNode':\n          if(!this.shiftIsDown) {\n            // place a new cube at ground intersetion\n            groundIntersect = this.mouseIntersectPoint(this.ground);\n\n            if(groundIntersect) {\n              this.rightToolArgs[0] = groundIntersect;\n            }\n\n            this.addResourceNode.apply(this, this.rightToolArgs);\n          }\n          break;\n        case 'assign':\n          // update the picking ray with the camera and mouse position\n          this.raycaster.setFromCamera(this.mouse, this.camera);\n\n          // calculate objects intersecting the picking ray\n          // build array of objects to check for\n          let objects = [];\n          objects.push.apply(objects, this.buildings);\n          objects.push.apply(objects, this.resourceNodes);\n          objects.push.apply(objects, this.cubes);\n          objects.push.call(objects, this.ground);\n\n          let gameObjects = this.getObjectsUnderMouse(objects, true);\n\n          // iterate over click intersect objects, camera -> ground\n          for(let i in gameObjects) {\n\n            let returnValue = gameObjects[i].assign(this.selectedUnits, gameObjects[i].point);\n\n            /*\n              object.assign() returns null and bubbles by default;\n              if bubbling should continue, its object.assign() should return falsey\n            */\n            if(returnValue) {\n              // stop bubbling\n              break;\n            } {\n              // continue bubbling up gameObjects array\n            }\n          }\n\n          break;\n        case 'createCube':\n\n          // place a new cube at ground intersetion\n          groundIntersect = this.mouseIntersectPoint(this.ground);\n\n          if(groundIntersect) {\n            this.rightToolArgs[0] = groundIntersect;\n          }\n\n          // place new cube according to rightToolArgs\n          this.addCube.apply(this, this.rightToolArgs);\n\n          break;\n        case 'createBuilding':\n          // place a new building at ground intersetion\n          groundIntersect = this.raycaster.intersectObjects([this.ground])[0];\n\n          if(groundIntersect) {\n            this.addBuilding(\n              groundIntersect.point,\n              undefined,\n              undefined,\n              'mine',\n              'complete'\n            );\n          }\n          break;\n        case 'buildBuilding':\n          // place a new building at ground intersetion\n          groundIntersect = this.raycaster.intersectObjects([this.ground])[0];\n\n          if(groundIntersect) {\n            this.addBuilding(\n              groundIntersect.point,\n              undefined,\n              undefined,\n              'mine',\n              'incomplete'\n            );\n          }\n          break;\n        default:\n          console.error('no rightTool assigned');\n          break;\n      }\n    }\n\n    mouseIsOnGame(event) {\n      if(event.target == CANVAS) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    getObjectsUnderMouse(objects, recursive) {\n      if(objects === undefined) {\n        objects = this.scene.children;\n      }\n      if(recursive === undefined) {\n        recursive = true;\n      }\n\n      // update the picking ray with the camera and mouse position\n      this.raycaster.setFromCamera(this.mouse, this.camera);\n\n      // calculate objects intersecting the picking ray\n      let intersects = this.raycaster.intersectObjects(objects, recursive);\n\n      let gameObjects = [];\n\n      for(let i in intersects) {\n        let obj = intersects[i].object;\n        while(obj.parent !== null) {\n          // only looking for game models\n          if(obj.parent == this.scene) {\n            // push unique obj onto gameObjects\n            if(gameObjects.indexOf(obj) === -1) {\n                obj.point = intersects[i].point;\n                gameObjects.push(obj);\n            }\n            break;\n          } else {\n            obj = obj.parent;\n          }\n        }\n      }\n\n      return gameObjects;\n    }\n\n    resetScore() {\n      this.player.score = 0;\n    }\n\n    resetResources() {\n      for(let i in this.player.resources) {\n        this.player.resources[i] = 0;\n      }\n    }\n\n    setRightTool(tool, args) {\n      this.rightTool = tool;\n\n      if(args !== undefined) {\n          this.rightToolArgs = args;\n      } else {\n        this.rightToolArgs = [];\n      }\n    }\n\n    getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n\nmodule.exports = Game;\n"]}